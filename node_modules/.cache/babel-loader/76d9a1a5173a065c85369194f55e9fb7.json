{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _chunkUV2F4F4Rjs = require('./chunk-UV2F4F4R.js'); // src/EventSource.ts\n\n\nfunction makeEventSource() {\n  const _onetimeObservers = /* @__PURE__ */new Set();\n\n  const _observers = /* @__PURE__ */new Set();\n\n  function subscribe(callback) {\n    _observers.add(callback);\n\n    return () => _observers.delete(callback);\n  }\n\n  function subscribeOnce(callback) {\n    _onetimeObservers.add(callback);\n\n    return () => _onetimeObservers.delete(callback);\n  }\n\n  function notify(event) {\n    _onetimeObservers.forEach(callback => callback(event));\n\n    _onetimeObservers.clear();\n\n    _observers.forEach(callback => callback(event));\n  }\n\n  function clear() {\n    _onetimeObservers.clear();\n\n    _observers.clear();\n  }\n\n  return {\n    notify,\n    subscribe,\n    subscribeOnce,\n    clear,\n    observable: {\n      subscribe,\n      subscribeOnce\n    }\n  };\n} // src/ImmutableRef.ts\n\n\nfunction merge(target, patch) {\n  let updated = false;\n\n  const newValue = _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, target);\n\n  Object.keys(patch).forEach(k => {\n    const key = k;\n    const val = patch[key];\n\n    if (newValue[key] !== val) {\n      if (val === void 0) {\n        delete newValue[key];\n      } else {\n        newValue[key] = val;\n      }\n\n      updated = true;\n    }\n  });\n  return updated ? newValue : target;\n}\n\nvar ImmutableRef = class {\n  constructor() {\n    this._ev = makeEventSource();\n  }\n\n  get didInvalidate() {\n    return this._ev.observable;\n  }\n\n  invalidate() {\n    if (this._cache !== void 0) {\n      this._cache = void 0;\n\n      this._ev.notify();\n    }\n  }\n\n  get current() {\n    var _a;\n\n    return (_a = this._cache) != null ? _a : this._cache = this._toImmutable();\n  }\n\n}; // src/MeRef.ts\n\nvar MeRef = class extends ImmutableRef {\n  constructor(initialPresence) {\n    super();\n    this._me = _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, initialPresence));\n  }\n\n  _toImmutable() {\n    return this._me;\n  }\n\n  patch(patch) {\n    const oldMe = this._me;\n    const newMe = merge(oldMe, patch);\n\n    if (oldMe !== newMe) {\n      this._me = _chunkUV2F4F4Rjs.freeze.call(void 0, newMe);\n      this.invalidate();\n    }\n  }\n\n}; // src/OthersRef.ts\n\nfunction makeUser(conn, presence) {\n  return _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, _chunkUV2F4F4Rjs.__spreadProps.call(void 0, _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, conn), {\n    presence\n  })));\n}\n\nvar OthersRef = class extends ImmutableRef {\n  constructor() {\n    super();\n    this._connections = {};\n    this._presences = {};\n    this._users = {};\n  }\n\n  _toImmutable() {\n    const users = _chunkUV2F4F4Rjs.compact.call(void 0, Object.keys(this._presences).map(connectionId => this.getUser(Number(connectionId))));\n\n    return _chunkUV2F4F4Rjs.asArrayWithLegacyMethods.call(void 0, users);\n  }\n\n  clearOthers() {\n    this._connections = {};\n    this._presences = {};\n    this._users = {};\n    this.invalidate();\n  }\n\n  _getUser(connectionId) {\n    const conn = this._connections[connectionId];\n    const presence = this._presences[connectionId];\n\n    if (conn !== void 0 && presence !== void 0) {\n      return makeUser(conn, presence);\n    }\n\n    return void 0;\n  }\n\n  getUser(connectionId) {\n    const cachedUser = this._users[connectionId];\n\n    if (cachedUser) {\n      return cachedUser;\n    }\n\n    const computedUser = this._getUser(connectionId);\n\n    if (computedUser) {\n      this._users[connectionId] = computedUser;\n      return computedUser;\n    }\n\n    return void 0;\n  }\n\n  _invalidateUser(connectionId) {\n    if (this._users[connectionId] !== void 0) {\n      delete this._users[connectionId];\n    }\n\n    this.invalidate();\n  }\n\n  setConnection(connectionId, metaUserId, metaUserInfo) {\n    this._connections[connectionId] = _chunkUV2F4F4Rjs.freeze.call(void 0, {\n      connectionId,\n      id: metaUserId,\n      info: metaUserInfo\n    });\n\n    if (this._presences[connectionId] !== void 0) {\n      this._invalidateUser(connectionId);\n    }\n  }\n\n  removeConnection(connectionId) {\n    delete this._connections[connectionId];\n    delete this._presences[connectionId];\n\n    this._invalidateUser(connectionId);\n  }\n\n  setOther(connectionId, presence) {\n    this._presences[connectionId] = _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, presence));\n\n    if (this._connections[connectionId] !== void 0) {\n      this._invalidateUser(connectionId);\n    }\n  }\n\n  patchOther(connectionId, patch) {\n    const oldPresence = this._presences[connectionId];\n\n    if (oldPresence === void 0) {\n      return;\n    }\n\n    const newPresence = merge(oldPresence, patch);\n\n    if (oldPresence !== newPresence) {\n      this._presences[connectionId] = _chunkUV2F4F4Rjs.freeze.call(void 0, newPresence);\n\n      this._invalidateUser(connectionId);\n    }\n  }\n\n}; // src/ValueRef.ts\n\nvar ValueRef = class extends ImmutableRef {\n  constructor(initialValue) {\n    super();\n    this._value = _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, initialValue));\n  }\n\n  _toImmutable() {\n    return this._value;\n  }\n\n  set(newValue) {\n    this._value = _chunkUV2F4F4Rjs.freeze.call(void 0, newValue);\n    this.invalidate();\n  }\n\n};\nvar DerivedRef = class extends ImmutableRef {\n  constructor(otherRefs, transformFn) {\n    super();\n    this._refs = otherRefs;\n\n    this._refs.forEach(ref => {\n      ref.didInvalidate.subscribe(() => this.invalidate());\n    });\n\n    this._transform = transformFn;\n  }\n\n  _toImmutable() {\n    return this._transform(this._refs[0].current, this._refs[1].current);\n  }\n\n}; // src/room.ts\n\nvar BACKOFF_RETRY_DELAYS = [250, 500, 1e3, 2e3, 4e3, 8e3, 1e4];\nvar BACKOFF_RETRY_DELAYS_SLOW = [2e3, 3e4, 6e4, 3e5];\nvar HEARTBEAT_INTERVAL = 3e4;\nvar PONG_TIMEOUT = 2e3;\n\nfunction makeIdFactory(connectionId) {\n  let count = 0;\n  return () => `${connectionId}:${count++}`;\n}\n\nfunction log() {\n  return;\n}\n\nfunction isConnectionSelfAware(connection) {\n  return connection.state === \"open\" || connection.state === \"connecting\";\n}\n\nfunction makeStateMachine(state, config, mockedEffects) {\n  const pool = {\n    roomId: config.roomId,\n    getNode: id => state.nodes.get(id),\n    addNode: (id, node) => void state.nodes.set(id, node),\n    deleteNode: id => void state.nodes.delete(id),\n    generateId: () => `${getConnectionId()}:${state.clock++}`,\n    generateOpId: () => `${getConnectionId()}:${state.opClock++}`,\n\n    dispatch(ops, reverse, storageUpdates) {\n      const activeBatch = state.activeBatch;\n\n      if (activeBatch) {\n        activeBatch.ops.push(...ops);\n        storageUpdates.forEach((value, key) => {\n          activeBatch.updates.storageUpdates.set(key, _chunkUV2F4F4Rjs.mergeStorageUpdates.call(void 0, activeBatch.updates.storageUpdates.get(key), value));\n        });\n        activeBatch.reverseOps.push(...reverse);\n      } else {\n        addToUndoStack(reverse);\n        state.redoStack = [];\n        dispatchOps(ops);\n        notify({\n          storageUpdates\n        });\n      }\n    }\n\n  };\n  const eventHub = {\n    customEvent: makeEventSource(),\n    me: makeEventSource(),\n    others: makeEventSource(),\n    error: makeEventSource(),\n    connection: makeEventSource(),\n    storage: makeEventSource(),\n    history: makeEventSource(),\n    storageDidLoad: makeEventSource()\n  };\n  const effects = mockedEffects || {\n    authenticate(auth, createWebSocket) {\n      const rawToken = state.token;\n\n      const parsedToken = rawToken !== null && _chunkUV2F4F4Rjs.parseRoomAuthToken.call(void 0, rawToken);\n\n      if (parsedToken && !_chunkUV2F4F4Rjs.isTokenExpired.call(void 0, parsedToken)) {\n        const socket = createWebSocket(rawToken);\n        authenticationSuccess(parsedToken, socket);\n      } else {\n        return auth(config.roomId).then(_ref => {\n          let {\n            token\n          } = _ref;\n\n          if (state.connection.current.state !== \"authenticating\") {\n            return;\n          }\n\n          const parsedToken2 = _chunkUV2F4F4Rjs.parseRoomAuthToken.call(void 0, token);\n\n          const socket = createWebSocket(token);\n          authenticationSuccess(parsedToken2, socket);\n          state.token = token;\n        }).catch(er => authenticationFailure(er instanceof Error ? er : new Error(String(er))));\n      }\n    },\n\n    send(messageOrMessages) {\n      if (state.socket === null) {\n        throw new Error(\"Can't send message if socket is null\");\n      }\n\n      state.socket.send(JSON.stringify(messageOrMessages));\n    },\n\n    delayFlush(delay) {\n      return setTimeout(tryFlushing, delay);\n    },\n\n    startHeartbeatInterval() {\n      return setInterval(heartbeat, HEARTBEAT_INTERVAL);\n    },\n\n    schedulePongTimeout() {\n      return setTimeout(pongTimeout, PONG_TIMEOUT);\n    },\n\n    scheduleReconnect(delay) {\n      return setTimeout(connect, delay);\n    }\n\n  };\n  const self = new DerivedRef([state.connection, state.me], (conn, me) => isConnectionSelfAware(conn) ? {\n    connectionId: conn.id,\n    id: conn.userId,\n    info: conn.userInfo,\n    presence: me\n  } : null);\n\n  function createOrUpdateRootFromMessage(message) {\n    if (message.items.length === 0) {\n      throw new Error(\"Internal error: cannot load storage without items\");\n    }\n\n    if (state.root) {\n      updateRoot(message.items);\n    } else {\n      state.root = load(message.items);\n    }\n\n    for (const key in state.initialStorage) {\n      if (state.root.get(key) === void 0) {\n        state.root.set(key, state.initialStorage[key]);\n      }\n    }\n  }\n\n  function buildRootAndParentToChildren(items) {\n    const parentToChildren = /* @__PURE__ */new Map();\n    let root = null;\n\n    for (const [id, crdt] of items) {\n      if (_chunkUV2F4F4Rjs.isRootCrdt.call(void 0, crdt)) {\n        root = [id, crdt];\n      } else {\n        const tuple = [id, crdt];\n        const children = parentToChildren.get(crdt.parentId);\n\n        if (children !== void 0) {\n          children.push(tuple);\n        } else {\n          parentToChildren.set(crdt.parentId, [tuple]);\n        }\n      }\n    }\n\n    if (root === null) {\n      throw new Error(\"Root can't be null\");\n    }\n\n    return [root, parentToChildren];\n  }\n\n  function updateRoot(items) {\n    if (!state.root) {\n      return;\n    }\n\n    const currentItems = /* @__PURE__ */new Map();\n    state.nodes.forEach((node, id) => {\n      currentItems.set(id, node._serialize());\n    });\n\n    const ops = _chunkUV2F4F4Rjs.getTreesDiffOperations.call(void 0, currentItems, new Map(items));\n\n    const result = apply(ops, false);\n    notify(result.updates);\n  }\n\n  function load(items) {\n    const [root, parentToChildren] = buildRootAndParentToChildren(items);\n    return _chunkUV2F4F4Rjs.LiveObject._deserialize(root, parentToChildren, pool);\n  }\n\n  function _addToRealUndoStack(historyOps) {\n    if (state.undoStack.length >= 50) {\n      state.undoStack.shift();\n    }\n\n    state.undoStack.push(historyOps);\n    onHistoryChange();\n  }\n\n  function addToUndoStack(historyOps) {\n    if (state.pausedHistory !== null) {\n      state.pausedHistory.unshift(...historyOps);\n    } else {\n      _addToRealUndoStack(historyOps);\n    }\n  }\n\n  function notify(_ref2) {\n    let {\n      storageUpdates = /* @__PURE__ */new Map(),\n      presence = false,\n      others: otherEvents = []\n    } = _ref2;\n\n    if (otherEvents.length > 0) {\n      const others = state.others.current;\n\n      for (const event of otherEvents) {\n        eventHub.others.notify({\n          others,\n          event\n        });\n      }\n    }\n\n    if (presence) {\n      eventHub.me.notify(state.me.current);\n    }\n\n    if (storageUpdates.size > 0) {\n      const updates = Array.from(storageUpdates.values());\n      eventHub.storage.notify(updates);\n    }\n  }\n\n  function getConnectionId() {\n    const conn = state.connection.current;\n\n    if (isConnectionSelfAware(conn)) {\n      return conn.id;\n    } else if (state.lastConnectionId !== null) {\n      return state.lastConnectionId;\n    }\n\n    throw new Error(\"Internal. Tried to get connection id but connection was never open\");\n  }\n\n  function apply(ops, isLocal) {\n    const result = {\n      reverse: [],\n      updates: {\n        storageUpdates: /* @__PURE__ */new Map(),\n        presence: false\n      }\n    };\n    const createdNodeIds = /* @__PURE__ */new Set();\n\n    for (const op of ops) {\n      if (op.type === \"presence\") {\n        const reverse = {\n          type: \"presence\",\n          data: {}\n        };\n\n        for (const key in op.data) {\n          reverse.data[key] = state.me.current[key];\n        }\n\n        state.me.patch(op.data);\n\n        if (state.buffer.me === null) {\n          state.buffer.me = {\n            type: \"partial\",\n            data: op.data\n          };\n        } else {\n          for (const key in op.data) {\n            state.buffer.me.data[key] = op.data[key];\n          }\n        }\n\n        result.reverse.unshift(reverse);\n        result.updates.presence = true;\n      } else {\n        let source;\n\n        if (!op.opId) {\n          op.opId = pool.generateOpId();\n        }\n\n        if (isLocal) {\n          source = 0\n          /* UNDOREDO_RECONNECT */\n          ;\n        } else {\n          const deleted = state.offlineOperations.delete(_chunkUV2F4F4Rjs.nn.call(void 0, op.opId));\n          source = deleted ? 2\n          /* ACK */\n          : 1\n          /* REMOTE */\n          ;\n        }\n\n        const applyOpResult = applyOp(op, source);\n\n        if (applyOpResult.modified) {\n          const parentId = applyOpResult.modified.node.parent.type === \"HasParent\" ? _chunkUV2F4F4Rjs.nn.call(void 0, applyOpResult.modified.node.parent.node._id, \"Expected parent node to have an ID\") : void 0;\n\n          if (!parentId || !createdNodeIds.has(parentId)) {\n            result.updates.storageUpdates.set(_chunkUV2F4F4Rjs.nn.call(void 0, applyOpResult.modified.node._id), _chunkUV2F4F4Rjs.mergeStorageUpdates.call(void 0, result.updates.storageUpdates.get(_chunkUV2F4F4Rjs.nn.call(void 0, applyOpResult.modified.node._id)), applyOpResult.modified));\n            result.reverse.unshift(...applyOpResult.reverse);\n          }\n\n          if (op.type === 2\n          /* CREATE_LIST */\n          || op.type === 7\n          /* CREATE_MAP */\n          || op.type === 4\n          /* CREATE_OBJECT */\n          ) {\n            createdNodeIds.add(_chunkUV2F4F4Rjs.nn.call(void 0, applyOpResult.modified.node._id));\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function applyOp(op, source) {\n    switch (op.type) {\n      case 6\n      /* DELETE_OBJECT_KEY */\n      :\n      case 3\n      /* UPDATE_OBJECT */\n      :\n      case 5\n      /* DELETE_CRDT */\n      :\n        {\n          const node = state.nodes.get(op.id);\n\n          if (node === void 0) {\n            return {\n              modified: false\n            };\n          }\n\n          return node._apply(op, source === 0\n          /* UNDOREDO_RECONNECT */\n          );\n        }\n\n      case 1\n      /* SET_PARENT_KEY */\n      :\n        {\n          const node = state.nodes.get(op.id);\n\n          if (node === void 0) {\n            return {\n              modified: false\n            };\n          }\n\n          if (node.parent.type === \"HasParent\" && _chunkUV2F4F4Rjs.isLiveList.call(void 0, node.parent.node)) {\n            return node.parent.node._setChildKey(op.parentKey, node, source);\n          }\n\n          return {\n            modified: false\n          };\n        }\n\n      case 4\n      /* CREATE_OBJECT */\n      :\n      case 2\n      /* CREATE_LIST */\n      :\n      case 7\n      /* CREATE_MAP */\n      :\n      case 8\n      /* CREATE_REGISTER */\n      :\n        {\n          if (op.parentId === void 0) {\n            return {\n              modified: false\n            };\n          }\n\n          const parentNode = state.nodes.get(op.parentId);\n\n          if (parentNode === void 0) {\n            return {\n              modified: false\n            };\n          }\n\n          return parentNode._attachChild(op, source);\n        }\n    }\n  }\n\n  function subscribeToLiveStructureDeeply(node, callback) {\n    return eventHub.storage.subscribe(updates => {\n      const relatedUpdates = updates.filter(update => _chunkUV2F4F4Rjs.isSameNodeOrChildOf.call(void 0, update.node, node));\n\n      if (relatedUpdates.length > 0) {\n        callback(relatedUpdates);\n      }\n    });\n  }\n\n  function subscribeToLiveStructureShallowly(node, callback) {\n    return eventHub.storage.subscribe(updates => {\n      for (const update of updates) {\n        if (update.node._id === node._id) {\n          callback(update.node);\n        }\n      }\n    });\n  }\n\n  function subscribe(first, second, options) {\n    if (typeof first === \"string\" && _chunkUV2F4F4Rjs.isRoomEventName.call(void 0, first)) {\n      if (typeof second !== \"function\") {\n        throw new Error(\"Second argument must be a callback function\");\n      }\n\n      const callback = second;\n\n      switch (first) {\n        case \"event\":\n          return eventHub.customEvent.subscribe(callback);\n\n        case \"my-presence\":\n          return eventHub.me.subscribe(callback);\n\n        case \"others\":\n          {\n            const cb = callback;\n            return eventHub.others.subscribe(_ref3 => {\n              let {\n                others,\n                event\n              } = _ref3;\n              return cb(others, event);\n            });\n          }\n\n        case \"error\":\n          return eventHub.error.subscribe(callback);\n\n        case \"connection\":\n          return eventHub.connection.subscribe(callback);\n\n        case \"storage\":\n          return eventHub.storage.subscribe(callback);\n\n        case \"history\":\n          return eventHub.history.subscribe(callback);\n\n        default:\n          return _chunkUV2F4F4Rjs.assertNever.call(void 0, first, \"Unknown event\");\n      }\n    }\n\n    if (second === void 0 || typeof first === \"function\") {\n      if (typeof first === \"function\") {\n        const storageCallback = first;\n        return eventHub.storage.subscribe(storageCallback);\n      } else {\n        throw new Error(\"Please specify a listener callback\");\n      }\n    }\n\n    if (_chunkUV2F4F4Rjs.isLiveNode.call(void 0, first)) {\n      const node = first;\n\n      if (options == null ? void 0 : options.isDeep) {\n        const storageCallback = second;\n        return subscribeToLiveStructureDeeply(node, storageCallback);\n      } else {\n        const nodeCallback = second;\n        return subscribeToLiveStructureShallowly(node, nodeCallback);\n      }\n    }\n\n    throw new Error(`\"${first}\" is not a valid event name`);\n  }\n\n  function getConnectionState() {\n    return state.connection.current.state;\n  }\n\n  function connect() {\n    var _a, _b, _c, _d;\n\n    if (state.connection.current.state !== \"closed\" && state.connection.current.state !== \"unavailable\") {\n      return null;\n    }\n\n    const auth = prepareAuthEndpoint(config.authentication, (_b = (_a = config.polyfills) == null ? void 0 : _a.fetch) != null ? _b : config.fetchPolyfill);\n    const createWebSocket = prepareCreateWebSocket(config.liveblocksServer, (_d = (_c = config.polyfills) == null ? void 0 : _c.WebSocket) != null ? _d : config.WebSocketPolyfill);\n    updateConnection({\n      state: \"authenticating\"\n    });\n    effects.authenticate(auth, createWebSocket);\n  }\n\n  function updatePresence(patch, options) {\n    const oldValues = {};\n\n    if (state.buffer.me === null) {\n      state.buffer.me = {\n        type: \"partial\",\n        data: {}\n      };\n    }\n\n    for (const key in patch) {\n      const overrideValue = patch[key];\n\n      if (overrideValue === void 0) {\n        continue;\n      }\n\n      state.buffer.me.data[key] = overrideValue;\n      oldValues[key] = state.me.current[key];\n    }\n\n    state.me.patch(patch);\n\n    if (state.activeBatch) {\n      if (options == null ? void 0 : options.addToHistory) {\n        state.activeBatch.reverseOps.push({\n          type: \"presence\",\n          data: oldValues\n        });\n      }\n\n      state.activeBatch.updates.presence = true;\n    } else {\n      tryFlushing();\n\n      if (options == null ? void 0 : options.addToHistory) {\n        addToUndoStack([{\n          type: \"presence\",\n          data: oldValues\n        }]);\n      }\n\n      notify({\n        presence: true\n      });\n    }\n  }\n\n  function authenticationSuccess(token, socket) {\n    socket.addEventListener(\"message\", onMessage);\n    socket.addEventListener(\"open\", onOpen);\n    socket.addEventListener(\"close\", onClose);\n    socket.addEventListener(\"error\", onError);\n    updateConnection({\n      state: \"connecting\",\n      id: token.actor,\n      userInfo: token.info,\n      userId: token.id\n    });\n    state.idFactory = makeIdFactory(token.actor);\n    state.socket = socket;\n  }\n\n  function authenticationFailure(error) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(\"Call to authentication endpoint failed\", error);\n    }\n\n    state.token = null;\n    updateConnection({\n      state: \"unavailable\"\n    });\n    state.numberOfRetry++;\n    state.timeoutHandles.reconnect = effects.scheduleReconnect(getRetryDelay());\n  }\n\n  function onVisibilityChange(visibilityState) {\n    if (visibilityState === \"visible\" && state.connection.current.state === \"open\") {\n      log(\"Heartbeat after visibility change\");\n      heartbeat();\n    }\n  }\n\n  function onUpdatePresenceMessage(message) {\n    if (message.targetActor !== void 0) {\n      const oldUser = state.others.getUser(message.actor);\n      state.others.setOther(message.actor, message.data);\n      const newUser = state.others.getUser(message.actor);\n\n      if (oldUser === void 0 && newUser !== void 0) {\n        return {\n          type: \"enter\",\n          user: newUser\n        };\n      }\n    } else {\n      state.others.patchOther(message.actor, message.data), message;\n    }\n\n    const user = state.others.getUser(message.actor);\n\n    if (user) {\n      return {\n        type: \"update\",\n        updates: message.data,\n        user\n      };\n    } else {\n      return void 0;\n    }\n  }\n\n  function onUserLeftMessage(message) {\n    const user = state.others.getUser(message.actor);\n\n    if (user) {\n      state.others.removeConnection(message.actor);\n      return {\n        type: \"leave\",\n        user\n      };\n    }\n\n    return null;\n  }\n\n  function onRoomStateMessage(message) {\n    for (const key in message.users) {\n      const user = message.users[key];\n      const connectionId = Number(key);\n      state.others.setConnection(connectionId, user.id, user.info);\n    }\n\n    return {\n      type: \"reset\"\n    };\n  }\n\n  function onNavigatorOnline() {\n    if (state.connection.current.state === \"unavailable\") {\n      log(\"Try to reconnect after connectivity change\");\n      reconnect();\n    }\n  }\n\n  function onHistoryChange() {\n    eventHub.history.notify({\n      canUndo: canUndo(),\n      canRedo: canRedo()\n    });\n  }\n\n  function onUserJoinedMessage(message) {\n    state.others.setConnection(message.actor, message.id, message.info);\n    state.buffer.messages.push({\n      type: 100\n      /* UPDATE_PRESENCE */\n      ,\n      data: state.me.current,\n      targetActor: message.actor\n    });\n    tryFlushing();\n    const user = state.others.getUser(message.actor);\n    return user ? {\n      type: \"enter\",\n      user\n    } : void 0;\n  }\n\n  function parseServerMessage(data) {\n    if (!_chunkUV2F4F4Rjs.isJsonObject.call(void 0, data)) {\n      return null;\n    }\n\n    return data;\n  }\n\n  function parseServerMessages(text) {\n    const data = _chunkUV2F4F4Rjs.tryParseJson.call(void 0, text);\n\n    if (data === void 0) {\n      return null;\n    } else if (_chunkUV2F4F4Rjs.isJsonArray.call(void 0, data)) {\n      return _chunkUV2F4F4Rjs.compact.call(void 0, data.map(item => parseServerMessage(item)));\n    } else {\n      return _chunkUV2F4F4Rjs.compact.call(void 0, [parseServerMessage(data)]);\n    }\n  }\n\n  function onMessage(event) {\n    if (event.data === \"pong\") {\n      clearTimeout(state.timeoutHandles.pongTimeout);\n      return;\n    }\n\n    const messages = parseServerMessages(event.data);\n\n    if (messages === null || messages.length === 0) {\n      return;\n    }\n\n    const updates = {\n      storageUpdates: /* @__PURE__ */new Map(),\n      others: []\n    };\n\n    for (const message of messages) {\n      switch (message.type) {\n        case 101\n        /* USER_JOINED */\n        :\n          {\n            const userJoinedUpdate = onUserJoinedMessage(message);\n\n            if (userJoinedUpdate) {\n              updates.others.push(userJoinedUpdate);\n            }\n\n            break;\n          }\n\n        case 100\n        /* UPDATE_PRESENCE */\n        :\n          {\n            const othersPresenceUpdate = onUpdatePresenceMessage(message);\n\n            if (othersPresenceUpdate) {\n              updates.others.push(othersPresenceUpdate);\n            }\n\n            break;\n          }\n\n        case 103\n        /* BROADCASTED_EVENT */\n        :\n          {\n            eventHub.customEvent.notify({\n              connectionId: message.actor,\n              event: message.event\n            });\n            break;\n          }\n\n        case 102\n        /* USER_LEFT */\n        :\n          {\n            const event2 = onUserLeftMessage(message);\n\n            if (event2) {\n              updates.others.push(event2);\n            }\n\n            break;\n          }\n\n        case 104\n        /* ROOM_STATE */\n        :\n          {\n            updates.others.push(onRoomStateMessage(message));\n            break;\n          }\n\n        case 200\n        /* INITIAL_STORAGE_STATE */\n        :\n          {\n            const offlineOps = new Map(state.offlineOperations);\n            createOrUpdateRootFromMessage(message);\n            applyAndSendOfflineOps(offlineOps);\n            _getInitialStateResolver == null ? void 0 : _getInitialStateResolver();\n            eventHub.storageDidLoad.notify();\n            break;\n          }\n\n        case 201\n        /* UPDATE_STORAGE */\n        :\n          {\n            const applyResult = apply(message.ops, false);\n            applyResult.updates.storageUpdates.forEach((value, key) => {\n              updates.storageUpdates.set(key, _chunkUV2F4F4Rjs.mergeStorageUpdates.call(void 0, updates.storageUpdates.get(key), value));\n            });\n            break;\n          }\n      }\n    }\n\n    notify(updates);\n  }\n\n  function onClose(event) {\n    state.socket = null;\n    clearTimeout(state.timeoutHandles.pongTimeout);\n    clearInterval(state.intervalHandles.heartbeat);\n\n    if (state.timeoutHandles.flush) {\n      clearTimeout(state.timeoutHandles.flush);\n    }\n\n    clearTimeout(state.timeoutHandles.reconnect);\n    state.others.clearOthers();\n    notify({\n      others: [{\n        type: \"reset\"\n      }]\n    });\n\n    if (event.code >= 4e3 && event.code <= 4100) {\n      updateConnection({\n        state: \"failed\"\n      });\n      const error = new LiveblocksError(event.reason, event.code);\n      eventHub.error.notify(error);\n      const delay = getRetryDelay(true);\n      state.numberOfRetry++;\n\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(`Connection to Liveblocks websocket server closed. Reason: ${error.message} (code: ${error.code}). Retrying in ${delay}ms.`);\n      }\n\n      updateConnection({\n        state: \"unavailable\"\n      });\n      state.timeoutHandles.reconnect = effects.scheduleReconnect(delay);\n    } else if (event.code === 4999\n    /* CLOSE_WITHOUT_RETRY */\n    ) {\n      updateConnection({\n        state: \"closed\"\n      });\n    } else {\n      const delay = getRetryDelay();\n      state.numberOfRetry++;\n\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(`Connection to Liveblocks websocket server closed (code: ${event.code}). Retrying in ${delay}ms.`);\n      }\n\n      updateConnection({\n        state: \"unavailable\"\n      });\n      state.timeoutHandles.reconnect = effects.scheduleReconnect(delay);\n    }\n  }\n\n  function updateConnection(connection) {\n    state.connection.set(connection);\n    eventHub.connection.notify(connection.state);\n  }\n\n  function getRetryDelay() {\n    let slow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (slow) {\n      return BACKOFF_RETRY_DELAYS_SLOW[state.numberOfRetry < BACKOFF_RETRY_DELAYS_SLOW.length ? state.numberOfRetry : BACKOFF_RETRY_DELAYS_SLOW.length - 1];\n    }\n\n    return BACKOFF_RETRY_DELAYS[state.numberOfRetry < BACKOFF_RETRY_DELAYS.length ? state.numberOfRetry : BACKOFF_RETRY_DELAYS.length - 1];\n  }\n\n  function onError() {}\n\n  function onOpen() {\n    clearInterval(state.intervalHandles.heartbeat);\n    state.intervalHandles.heartbeat = effects.startHeartbeatInterval();\n\n    if (state.connection.current.state === \"connecting\") {\n      updateConnection(_chunkUV2F4F4Rjs.__spreadProps.call(void 0, _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, state.connection.current), {\n        state: \"open\"\n      }));\n      state.numberOfRetry = 0;\n\n      if (state.lastConnectionId !== void 0) {\n        state.buffer.me = {\n          type: \"full\",\n          data: _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, state.me.current)\n        };\n        tryFlushing();\n      }\n\n      state.lastConnectionId = state.connection.current.id;\n\n      if (state.root) {\n        state.buffer.messages.push({\n          type: 200\n          /* FETCH_STORAGE */\n\n        });\n      }\n\n      tryFlushing();\n    } else {}\n  }\n\n  function heartbeat() {\n    if (state.socket === null) {\n      return;\n    }\n\n    clearTimeout(state.timeoutHandles.pongTimeout);\n    state.timeoutHandles.pongTimeout = effects.schedulePongTimeout();\n\n    if (state.socket.readyState === state.socket.OPEN) {\n      state.socket.send(\"ping\");\n    }\n  }\n\n  function pongTimeout() {\n    log(\"Pong timeout. Trying to reconnect.\");\n    reconnect();\n  }\n\n  function reconnect() {\n    if (state.socket) {\n      state.socket.removeEventListener(\"open\", onOpen);\n      state.socket.removeEventListener(\"message\", onMessage);\n      state.socket.removeEventListener(\"close\", onClose);\n      state.socket.removeEventListener(\"error\", onError);\n      state.socket.close();\n      state.socket = null;\n    }\n\n    updateConnection({\n      state: \"unavailable\"\n    });\n    clearTimeout(state.timeoutHandles.pongTimeout);\n\n    if (state.timeoutHandles.flush) {\n      clearTimeout(state.timeoutHandles.flush);\n    }\n\n    clearTimeout(state.timeoutHandles.reconnect);\n    clearInterval(state.intervalHandles.heartbeat);\n    connect();\n  }\n\n  function applyAndSendOfflineOps(offlineOps) {\n    if (offlineOps.size === 0) {\n      return;\n    }\n\n    const messages = [];\n    const ops = Array.from(offlineOps.values());\n    const result = apply(ops, true);\n    messages.push({\n      type: 201\n      /* UPDATE_STORAGE */\n      ,\n      ops\n    });\n    notify(result.updates);\n    effects.send(messages);\n  }\n\n  function tryFlushing() {\n    const storageOps = state.buffer.storageOperations;\n\n    if (storageOps.length > 0) {\n      storageOps.forEach(op => {\n        state.offlineOperations.set(_chunkUV2F4F4Rjs.nn.call(void 0, op.opId), op);\n      });\n    }\n\n    if (state.socket === null || state.socket.readyState !== state.socket.OPEN) {\n      state.buffer.storageOperations = [];\n      return;\n    }\n\n    const now = Date.now();\n    const elapsedTime = now - state.lastFlushTime;\n\n    if (elapsedTime > config.throttleDelay) {\n      const messages = flushDataToMessages(state);\n\n      if (messages.length === 0) {\n        return;\n      }\n\n      effects.send(messages);\n      state.buffer = {\n        messages: [],\n        storageOperations: [],\n        me: null\n      };\n      state.lastFlushTime = now;\n    } else {\n      if (state.timeoutHandles.flush !== null) {\n        clearTimeout(state.timeoutHandles.flush);\n      }\n\n      state.timeoutHandles.flush = effects.delayFlush(config.throttleDelay - (now - state.lastFlushTime));\n    }\n  }\n\n  function flushDataToMessages(state2) {\n    const messages = [];\n\n    if (state2.buffer.me) {\n      messages.push(state2.buffer.me.type === \"full\" ? {\n        type: 100\n        /* UPDATE_PRESENCE */\n        ,\n        targetActor: -1,\n        data: state2.buffer.me.data\n      } : {\n        type: 100\n        /* UPDATE_PRESENCE */\n        ,\n        data: state2.buffer.me.data\n      });\n    }\n\n    for (const event of state2.buffer.messages) {\n      messages.push(event);\n    }\n\n    if (state2.buffer.storageOperations.length > 0) {\n      messages.push({\n        type: 201\n        /* UPDATE_STORAGE */\n        ,\n        ops: state2.buffer.storageOperations\n      });\n    }\n\n    return messages;\n  }\n\n  function disconnect() {\n    if (state.socket) {\n      state.socket.removeEventListener(\"open\", onOpen);\n      state.socket.removeEventListener(\"message\", onMessage);\n      state.socket.removeEventListener(\"close\", onClose);\n      state.socket.removeEventListener(\"error\", onError);\n      state.socket.close();\n      state.socket = null;\n    }\n\n    updateConnection({\n      state: \"closed\"\n    });\n\n    if (state.timeoutHandles.flush) {\n      clearTimeout(state.timeoutHandles.flush);\n    }\n\n    clearTimeout(state.timeoutHandles.reconnect);\n    clearTimeout(state.timeoutHandles.pongTimeout);\n    clearInterval(state.intervalHandles.heartbeat);\n    state.others.clearOthers();\n    notify({\n      others: [{\n        type: \"reset\"\n      }]\n    });\n    Object.values(eventHub).forEach(eventSource => eventSource.clear());\n  }\n\n  function getPresence() {\n    return state.me.current;\n  }\n\n  function getOthers() {\n    return state.others.current;\n  }\n\n  function broadcastEvent(event) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      shouldQueueEventIfNotReady: false\n    };\n\n    if (state.socket === null && !options.shouldQueueEventIfNotReady) {\n      return;\n    }\n\n    state.buffer.messages.push({\n      type: 103\n      /* BROADCAST_EVENT */\n      ,\n      event\n    });\n    tryFlushing();\n  }\n\n  function dispatchOps(ops) {\n    state.buffer.storageOperations.push(...ops);\n    tryFlushing();\n  }\n\n  let _getInitialStatePromise = null;\n  let _getInitialStateResolver = null;\n\n  function startLoadingStorage() {\n    if (_getInitialStatePromise === null) {\n      state.buffer.messages.push({\n        type: 200\n        /* FETCH_STORAGE */\n\n      });\n      tryFlushing();\n      _getInitialStatePromise = new Promise(resolve => _getInitialStateResolver = resolve);\n    }\n\n    return _getInitialStatePromise;\n  }\n\n  function getStorageSnapshot() {\n    const root = state.root;\n\n    if (root !== void 0) {\n      return root;\n    } else {\n      startLoadingStorage();\n      return null;\n    }\n  }\n\n  function getStorage() {\n    return _chunkUV2F4F4Rjs.__async.call(void 0, this, null, function* () {\n      if (state.root) {\n        return Promise.resolve({\n          root: state.root\n        });\n      }\n\n      yield startLoadingStorage();\n      return {\n        root: _chunkUV2F4F4Rjs.nn.call(void 0, state.root)\n      };\n    });\n  }\n\n  function undo() {\n    if (state.activeBatch) {\n      throw new Error(\"undo is not allowed during a batch\");\n    }\n\n    const historyOps = state.undoStack.pop();\n\n    if (historyOps === void 0) {\n      return;\n    }\n\n    state.pausedHistory = null;\n    const result = apply(historyOps, true);\n    notify(result.updates);\n    state.redoStack.push(result.reverse);\n    onHistoryChange();\n\n    for (const op of historyOps) {\n      if (op.type !== \"presence\") {\n        state.buffer.storageOperations.push(op);\n      }\n    }\n\n    tryFlushing();\n  }\n\n  function canUndo() {\n    return state.undoStack.length > 0;\n  }\n\n  function redo() {\n    if (state.activeBatch) {\n      throw new Error(\"redo is not allowed during a batch\");\n    }\n\n    const historyOps = state.redoStack.pop();\n\n    if (historyOps === void 0) {\n      return;\n    }\n\n    state.pausedHistory = null;\n    const result = apply(historyOps, true);\n    notify(result.updates);\n    state.undoStack.push(result.reverse);\n    onHistoryChange();\n\n    for (const op of historyOps) {\n      if (op.type !== \"presence\") {\n        state.buffer.storageOperations.push(op);\n      }\n    }\n\n    tryFlushing();\n  }\n\n  function canRedo() {\n    return state.redoStack.length > 0;\n  }\n\n  function batch(callback) {\n    if (state.activeBatch) {\n      return callback();\n    }\n\n    state.activeBatch = {\n      ops: [],\n      updates: {\n        storageUpdates: /* @__PURE__ */new Map(),\n        presence: false,\n        others: []\n      },\n      reverseOps: []\n    };\n\n    try {\n      return callback();\n    } finally {\n      const currentBatch = state.activeBatch;\n      state.activeBatch = null;\n\n      if (currentBatch.reverseOps.length > 0) {\n        addToUndoStack(currentBatch.reverseOps);\n      }\n\n      if (currentBatch.ops.length > 0) {\n        state.redoStack = [];\n      }\n\n      if (currentBatch.ops.length > 0) {\n        dispatchOps(currentBatch.ops);\n      }\n\n      notify(currentBatch.updates);\n      tryFlushing();\n    }\n  }\n\n  function pauseHistory() {\n    state.pausedHistory = [];\n  }\n\n  function resumeHistory() {\n    const historyOps = state.pausedHistory;\n    state.pausedHistory = null;\n\n    if (historyOps !== null && historyOps.length > 0) {\n      _addToRealUndoStack(historyOps);\n    }\n  }\n\n  function simulateSocketClose() {\n    if (state.socket) {\n      state.socket = null;\n    }\n  }\n\n  function simulateSendCloseEvent(event) {\n    onClose(event);\n  }\n\n  return {\n    onClose,\n    onMessage,\n    authenticationSuccess,\n    heartbeat,\n    onNavigatorOnline,\n    simulateSocketClose,\n    simulateSendCloseEvent,\n    onVisibilityChange,\n    getUndoStack: () => state.undoStack,\n    getItemsCount: () => state.nodes.size,\n    connect,\n    disconnect,\n    subscribe,\n    updatePresence,\n    broadcastEvent,\n    batch,\n    undo,\n    redo,\n    canUndo,\n    canRedo,\n    pauseHistory,\n    resumeHistory,\n    getStorage,\n    getStorageSnapshot,\n    events: {\n      customEvent: eventHub.customEvent.observable,\n      others: eventHub.others.observable,\n      me: eventHub.me.observable,\n      error: eventHub.error.observable,\n      connection: eventHub.connection.observable,\n      storage: eventHub.storage.observable,\n      history: eventHub.history.observable,\n      storageDidLoad: eventHub.storageDidLoad.observable\n    },\n    getConnectionState,\n    isSelfAware: () => isConnectionSelfAware(state.connection.current),\n    getSelf: () => self.current,\n    getPresence,\n    getOthers\n  };\n}\n\nfunction defaultState(initialPresence, initialStorage) {\n  const others = new OthersRef();\n  const connection = new ValueRef({\n    state: \"closed\"\n  });\n  return {\n    token: null,\n    lastConnectionId: null,\n    socket: null,\n    numberOfRetry: 0,\n    lastFlushTime: 0,\n    timeoutHandles: {\n      flush: null,\n      reconnect: 0,\n      pongTimeout: 0\n    },\n    buffer: {\n      me: {\n        type: \"full\",\n        data: initialPresence\n      },\n      messages: [],\n      storageOperations: []\n    },\n    intervalHandles: {\n      heartbeat: 0\n    },\n    connection,\n    me: new MeRef(initialPresence),\n    others,\n    initialStorage,\n    idFactory: null,\n    clock: 0,\n    opClock: 0,\n    nodes: /* @__PURE__ */new Map(),\n    root: void 0,\n    undoStack: [],\n    redoStack: [],\n    pausedHistory: null,\n    activeBatch: null,\n    offlineOperations: /* @__PURE__ */new Map()\n  };\n}\n\nfunction createRoom(options, config) {\n  const {\n    initialPresence,\n    initialStorage\n  } = options;\n  const state = defaultState(typeof initialPresence === \"function\" ? initialPresence(config.roomId) : initialPresence, typeof initialStorage === \"function\" ? initialStorage(config.roomId) : initialStorage);\n  const machine = makeStateMachine(state, config);\n  const room = {\n    id: config.roomId,\n    getConnectionState: machine.getConnectionState,\n    isSelfAware: machine.isSelfAware,\n    getSelf: machine.getSelf,\n    subscribe: machine.subscribe,\n    getPresence: machine.getPresence,\n    updatePresence: machine.updatePresence,\n    getOthers: machine.getOthers,\n    broadcastEvent: machine.broadcastEvent,\n    getStorage: machine.getStorage,\n    getStorageSnapshot: machine.getStorageSnapshot,\n    events: machine.events,\n    batch: machine.batch,\n    history: {\n      undo: machine.undo,\n      redo: machine.redo,\n      canUndo: machine.canUndo,\n      canRedo: machine.canRedo,\n      pause: machine.pauseHistory,\n      resume: machine.resumeHistory\n    },\n    __INTERNAL_DO_NOT_USE: {\n      simulateCloseWebsocket: machine.simulateSocketClose,\n      simulateSendCloseEvent: machine.simulateSendCloseEvent\n    }\n  };\n  return {\n    connect: machine.connect,\n    disconnect: machine.disconnect,\n    onNavigatorOnline: machine.onNavigatorOnline,\n    onVisibilityChange: machine.onVisibilityChange,\n    room\n  };\n}\n\nvar LiveblocksError = class extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n\n};\n\nfunction prepareCreateWebSocket(liveblocksServer, WebSocketPolyfill) {\n  if (typeof window === \"undefined\" && WebSocketPolyfill === void 0) {\n    throw new Error(\"To use Liveblocks client in a non-dom environment, you need to provide a WebSocket polyfill.\");\n  }\n\n  const ws = WebSocketPolyfill || WebSocket;\n  return token => {\n    return new ws(`${liveblocksServer}/?token=${token}&version=${true ? \"0.18.2\" : \"dev\"}`);\n  };\n}\n\nfunction prepareAuthEndpoint(authentication, fetchPolyfill) {\n  if (authentication.type === \"public\") {\n    if (typeof window === \"undefined\" && fetchPolyfill === void 0) {\n      throw new Error(\"To use Liveblocks client in a non-dom environment with a publicApiKey, you need to provide a fetch polyfill.\");\n    }\n\n    return room => fetchAuthEndpoint(fetchPolyfill || fetch, authentication.url, {\n      room,\n      publicApiKey: authentication.publicApiKey\n    });\n  }\n\n  if (authentication.type === \"private\") {\n    if (typeof window === \"undefined\" && fetchPolyfill === void 0) {\n      throw new Error(\"To use Liveblocks client in a non-dom environment with a url as auth endpoint, you need to provide a fetch polyfill.\");\n    }\n\n    return room => fetchAuthEndpoint(fetchPolyfill || fetch, authentication.url, {\n      room\n    });\n  }\n\n  if (authentication.type === \"custom\") {\n    return room => _chunkUV2F4F4Rjs.__async.call(void 0, this, null, function* () {\n      const response = yield authentication.callback(room);\n\n      if (!response || !response.token) {\n        throw new Error('Authentication error. We expect the authentication callback to return a token, but it does not. Hint: the return value should look like: { token: \"...\" }');\n      }\n\n      return response;\n    });\n  }\n\n  throw new Error(\"Internal error. Unexpected authentication type\");\n}\n\nfunction fetchAuthEndpoint(fetch2, endpoint, body) {\n  return _chunkUV2F4F4Rjs.__async.call(void 0, this, null, function* () {\n    const res = yield fetch2(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n\n    if (!res.ok) {\n      throw new AuthenticationError(`Expected a status 200 but got ${res.status} when doing a POST request on \"${endpoint}\"`);\n    }\n\n    let data;\n\n    try {\n      data = yield res.json();\n    } catch (er) {\n      throw new AuthenticationError(`Expected a JSON response when doing a POST request on \"${endpoint}\". ${er}`);\n    }\n\n    if (!_chunkUV2F4F4Rjs.isPlainObject.call(void 0, data) || typeof data.token !== \"string\") {\n      throw new AuthenticationError(`Expected a JSON response of the form \\`{ token: \"...\" }\\` when doing a POST request on \"${endpoint}\", but got ${JSON.stringify(data)}`);\n    }\n\n    const {\n      token\n    } = data;\n    return {\n      token\n    };\n  });\n}\n\nvar AuthenticationError = class extends Error {\n  constructor(message) {\n    super(message);\n  }\n\n}; // src/client.ts\n\nfunction createClient(options) {\n  const clientOptions = options;\n  const throttleDelay = getThrottleDelayFromOptions(options);\n  const rooms = /* @__PURE__ */new Map();\n\n  function getRoom(roomId) {\n    const internalRoom = rooms.get(roomId);\n    return internalRoom ? internalRoom.room : null;\n  }\n\n  function enter(roomId, options2) {\n    var _a, _b;\n\n    let internalRoom = rooms.get(roomId);\n\n    if (internalRoom) {\n      return internalRoom.room;\n    }\n\n    _chunkUV2F4F4Rjs.deprecateIf.call(void 0, options2.initialPresence === null || options2.initialPresence === void 0, \"Please provide an initial presence value for the current user when entering the room.\");\n\n    internalRoom = createRoom({\n      initialPresence: (_a = options2.initialPresence) != null ? _a : {},\n      initialStorage: options2.initialStorage\n    }, {\n      roomId,\n      throttleDelay,\n      polyfills: clientOptions.polyfills,\n      WebSocketPolyfill: clientOptions.WebSocketPolyfill,\n      fetchPolyfill: clientOptions.fetchPolyfill,\n      liveblocksServer: (clientOptions == null ? void 0 : clientOptions.liveblocksServer) || \"wss://api.liveblocks.io/v6\",\n      authentication: prepareAuthentication(clientOptions, roomId)\n    });\n    rooms.set(roomId, internalRoom);\n\n    if (!options2.DO_NOT_USE_withoutConnecting) {\n      if (typeof atob === \"undefined\") {\n        if (((_b = clientOptions.polyfills) == null ? void 0 : _b.atob) === void 0) {\n          throw new Error(\"You need to polyfill atob to use the client in your environment. Please follow the instructions at https://liveblocks.io/docs/errors/liveblocks-client/atob-polyfill\");\n        }\n\n        global.atob = clientOptions.polyfills.atob;\n      }\n\n      internalRoom.connect();\n    }\n\n    return internalRoom.room;\n  }\n\n  function leave(roomId) {\n    const room = rooms.get(roomId);\n\n    if (room) {\n      room.disconnect();\n      rooms.delete(roomId);\n    }\n  }\n\n  if (typeof window !== \"undefined\" && typeof window.addEventListener !== \"undefined\") {\n    window.addEventListener(\"online\", () => {\n      for (const [, room] of rooms) {\n        room.onNavigatorOnline();\n      }\n    });\n  }\n\n  if (typeof document !== \"undefined\") {\n    document.addEventListener(\"visibilitychange\", () => {\n      for (const [, room] of rooms) {\n        room.onVisibilityChange(document.visibilityState);\n      }\n    });\n  }\n\n  return {\n    getRoom,\n    enter,\n    leave\n  };\n}\n\nfunction getThrottleDelayFromOptions(options) {\n  if (options.throttle === void 0) {\n    return 100;\n  }\n\n  if (typeof options.throttle !== \"number\" || options.throttle < 80 || options.throttle > 1e3) {\n    throw new Error(\"throttle should be a number between 80 and 1000.\");\n  }\n\n  return options.throttle;\n}\n\nfunction prepareAuthentication(clientOptions, roomId) {\n  const {\n    publicApiKey,\n    authEndpoint\n  } = clientOptions;\n\n  if (authEndpoint !== void 0 && publicApiKey !== void 0) {\n    throw new Error(\"You cannot use both publicApiKey and authEndpoint. Please use either publicApiKey or authEndpoint, but not both. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient\");\n  }\n\n  if (typeof publicApiKey === \"string\") {\n    if (publicApiKey.startsWith(\"sk_\")) {\n      throw new Error(\"Invalid publicApiKey. You are using the secret key which is not supported. Please use the public key instead. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey\");\n    } else if (!publicApiKey.startsWith(\"pk_\")) {\n      throw new Error(\"Invalid key. Please use the public key format: pk_<public key>. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey\");\n    }\n\n    return {\n      type: \"public\",\n      publicApiKey,\n      url: buildLiveblocksPublicAuthorizeEndpoint(clientOptions, roomId)\n    };\n  }\n\n  if (typeof authEndpoint === \"string\") {\n    return {\n      type: \"private\",\n      url: authEndpoint\n    };\n  } else if (typeof authEndpoint === \"function\") {\n    return {\n      type: \"custom\",\n      callback: authEndpoint\n    };\n  } else if (authEndpoint !== void 0) {\n    throw new Error(\"authEndpoint must be a string or a function. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientAuthEndpoint\");\n  }\n\n  throw new Error(\"Invalid Liveblocks client options. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient\");\n}\n\nfunction buildLiveblocksPublicAuthorizeEndpoint(options, roomId) {\n  if (options.publicAuthorizeEndpoint) {\n    return options.publicAuthorizeEndpoint.replace(\"{roomId}\", roomId);\n  }\n\n  return `https://api.liveblocks.io/v2/rooms/${encodeURIComponent(roomId)}/public/authorize`;\n} // src/shallow.ts\n\n\nfunction shallowArray(xs, ys) {\n  if (xs.length !== ys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < xs.length; i++) {\n    if (!Object.is(xs[i], ys[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowObj(objA, objB) {\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null || Object.prototype.toString.call(objA) !== \"[object Object]\" || Object.prototype.toString.call(objB) !== \"[object Object]\") {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n\n  return keysA.every(key => Object.prototype.hasOwnProperty.call(objB, key) && Object.is(objA[key], objB[key]));\n}\n\nfunction shallow(a, b) {\n  if (Object.is(a, b)) {\n    return true;\n  }\n\n  const isArrayA = Array.isArray(a);\n  const isArrayB = Array.isArray(b);\n\n  if (isArrayA || isArrayB) {\n    if (!isArrayA || !isArrayB) {\n      return false;\n    }\n\n    return shallowArray(a, b);\n  }\n\n  return shallowObj(a, b);\n}\n\nexports.LiveList = _chunkUV2F4F4Rjs.LiveList;\nexports.LiveMap = _chunkUV2F4F4Rjs.LiveMap;\nexports.LiveObject = _chunkUV2F4F4Rjs.LiveObject;\nexports.createClient = createClient;\nexports.shallow = shallow;","map":{"version":3,"sources":["/Users/dongxiaomu/Desktop/csce672/CSCE 672 project/CSCE672-project/node_modules/@liveblocks/client/index.js"],"names":["Object","defineProperty","exports","value","_chunkUV2F4F4Rjs","require","makeEventSource","_onetimeObservers","Set","_observers","subscribe","callback","add","delete","subscribeOnce","notify","event","forEach","clear","observable","merge","target","patch","updated","newValue","__spreadValues","call","keys","k","key","val","ImmutableRef","constructor","_ev","didInvalidate","invalidate","_cache","current","_a","_toImmutable","MeRef","initialPresence","_me","freeze","compactObject","oldMe","newMe","makeUser","conn","presence","__spreadProps","OthersRef","_connections","_presences","_users","users","compact","map","connectionId","getUser","Number","asArrayWithLegacyMethods","clearOthers","_getUser","cachedUser","computedUser","_invalidateUser","setConnection","metaUserId","metaUserInfo","id","info","removeConnection","setOther","patchOther","oldPresence","newPresence","ValueRef","initialValue","_value","set","DerivedRef","otherRefs","transformFn","_refs","ref","_transform","BACKOFF_RETRY_DELAYS","BACKOFF_RETRY_DELAYS_SLOW","HEARTBEAT_INTERVAL","PONG_TIMEOUT","makeIdFactory","count","log","isConnectionSelfAware","connection","state","makeStateMachine","config","mockedEffects","pool","roomId","getNode","nodes","get","addNode","node","deleteNode","generateId","getConnectionId","clock","generateOpId","opClock","dispatch","ops","reverse","storageUpdates","activeBatch","push","updates","mergeStorageUpdates","reverseOps","addToUndoStack","redoStack","dispatchOps","eventHub","customEvent","me","others","error","storage","history","storageDidLoad","effects","authenticate","auth","createWebSocket","rawToken","token","parsedToken","parseRoomAuthToken","isTokenExpired","socket","authenticationSuccess","then","parsedToken2","catch","er","authenticationFailure","Error","String","send","messageOrMessages","JSON","stringify","delayFlush","delay","setTimeout","tryFlushing","startHeartbeatInterval","setInterval","heartbeat","schedulePongTimeout","pongTimeout","scheduleReconnect","connect","self","userId","userInfo","createOrUpdateRootFromMessage","message","items","length","root","updateRoot","load","initialStorage","buildRootAndParentToChildren","parentToChildren","Map","crdt","isRootCrdt","tuple","children","parentId","currentItems","_serialize","getTreesDiffOperations","result","apply","LiveObject","_deserialize","_addToRealUndoStack","historyOps","undoStack","shift","onHistoryChange","pausedHistory","unshift","otherEvents","size","Array","from","values","lastConnectionId","isLocal","createdNodeIds","op","type","data","buffer","source","opId","deleted","offlineOperations","nn","applyOpResult","applyOp","modified","parent","_id","has","_apply","isLiveList","_setChildKey","parentKey","parentNode","_attachChild","subscribeToLiveStructureDeeply","relatedUpdates","filter","update","isSameNodeOrChildOf","subscribeToLiveStructureShallowly","first","second","options","isRoomEventName","cb","assertNever","storageCallback","isLiveNode","isDeep","nodeCallback","getConnectionState","_b","_c","_d","prepareAuthEndpoint","authentication","polyfills","fetch","fetchPolyfill","prepareCreateWebSocket","liveblocksServer","WebSocket","WebSocketPolyfill","updateConnection","updatePresence","oldValues","overrideValue","addToHistory","addEventListener","onMessage","onOpen","onClose","onError","actor","idFactory","process","env","NODE_ENV","console","numberOfRetry","timeoutHandles","reconnect","getRetryDelay","onVisibilityChange","visibilityState","onUpdatePresenceMessage","targetActor","oldUser","newUser","user","onUserLeftMessage","onRoomStateMessage","onNavigatorOnline","canUndo","canRedo","onUserJoinedMessage","messages","parseServerMessage","isJsonObject","parseServerMessages","text","tryParseJson","isJsonArray","item","clearTimeout","userJoinedUpdate","othersPresenceUpdate","event2","offlineOps","applyAndSendOfflineOps","_getInitialStateResolver","applyResult","clearInterval","intervalHandles","flush","code","LiveblocksError","reason","warn","slow","readyState","OPEN","removeEventListener","close","storageOps","storageOperations","now","Date","elapsedTime","lastFlushTime","throttleDelay","flushDataToMessages","state2","disconnect","eventSource","getPresence","getOthers","broadcastEvent","shouldQueueEventIfNotReady","_getInitialStatePromise","startLoadingStorage","Promise","resolve","getStorageSnapshot","getStorage","__async","undo","pop","redo","batch","currentBatch","pauseHistory","resumeHistory","simulateSocketClose","simulateSendCloseEvent","getUndoStack","getItemsCount","events","isSelfAware","getSelf","defaultState","createRoom","machine","room","pause","resume","__INTERNAL_DO_NOT_USE","simulateCloseWebsocket","window","ws","fetchAuthEndpoint","url","publicApiKey","response","fetch2","endpoint","body","res","method","headers","ok","AuthenticationError","status","json","isPlainObject","createClient","clientOptions","getThrottleDelayFromOptions","rooms","getRoom","internalRoom","enter","options2","deprecateIf","prepareAuthentication","DO_NOT_USE_withoutConnecting","atob","global","leave","document","throttle","authEndpoint","startsWith","buildLiveblocksPublicAuthorizeEndpoint","publicAuthorizeEndpoint","replace","encodeURIComponent","shallowArray","xs","ys","i","is","shallowObj","objA","objB","prototype","toString","keysA","every","hasOwnProperty","shallow","a","b","isArrayA","isArray","isArrayB","LiveList","LiveMap"],"mappings":"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","sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkUV2F4F4Rjs = require('./chunk-UV2F4F4R.js');\n\n// src/EventSource.ts\nfunction makeEventSource() {\n  const _onetimeObservers = /* @__PURE__ */ new Set();\n  const _observers = /* @__PURE__ */ new Set();\n  function subscribe(callback) {\n    _observers.add(callback);\n    return () => _observers.delete(callback);\n  }\n  function subscribeOnce(callback) {\n    _onetimeObservers.add(callback);\n    return () => _onetimeObservers.delete(callback);\n  }\n  function notify(event) {\n    _onetimeObservers.forEach((callback) => callback(event));\n    _onetimeObservers.clear();\n    _observers.forEach((callback) => callback(event));\n  }\n  function clear() {\n    _onetimeObservers.clear();\n    _observers.clear();\n  }\n  return {\n    notify,\n    subscribe,\n    subscribeOnce,\n    clear,\n    observable: {\n      subscribe,\n      subscribeOnce\n    }\n  };\n}\n\n// src/ImmutableRef.ts\nfunction merge(target, patch) {\n  let updated = false;\n  const newValue = _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, target);\n  Object.keys(patch).forEach((k) => {\n    const key = k;\n    const val = patch[key];\n    if (newValue[key] !== val) {\n      if (val === void 0) {\n        delete newValue[key];\n      } else {\n        newValue[key] = val;\n      }\n      updated = true;\n    }\n  });\n  return updated ? newValue : target;\n}\nvar ImmutableRef = class {\n  constructor() {\n    this._ev = makeEventSource();\n  }\n  get didInvalidate() {\n    return this._ev.observable;\n  }\n  invalidate() {\n    if (this._cache !== void 0) {\n      this._cache = void 0;\n      this._ev.notify();\n    }\n  }\n  get current() {\n    var _a;\n    return (_a = this._cache) != null ? _a : this._cache = this._toImmutable();\n  }\n};\n\n// src/MeRef.ts\nvar MeRef = class extends ImmutableRef {\n  constructor(initialPresence) {\n    super();\n    this._me = _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, initialPresence));\n  }\n  _toImmutable() {\n    return this._me;\n  }\n  patch(patch) {\n    const oldMe = this._me;\n    const newMe = merge(oldMe, patch);\n    if (oldMe !== newMe) {\n      this._me = _chunkUV2F4F4Rjs.freeze.call(void 0, newMe);\n      this.invalidate();\n    }\n  }\n};\n\n// src/OthersRef.ts\nfunction makeUser(conn, presence) {\n  return _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, _chunkUV2F4F4Rjs.__spreadProps.call(void 0, _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, conn), { presence })));\n}\nvar OthersRef = class extends ImmutableRef {\n  constructor() {\n    super();\n    this._connections = {};\n    this._presences = {};\n    this._users = {};\n  }\n  _toImmutable() {\n    const users = _chunkUV2F4F4Rjs.compact.call(void 0, \n      Object.keys(this._presences).map(\n        (connectionId) => this.getUser(Number(connectionId))\n      )\n    );\n    return _chunkUV2F4F4Rjs.asArrayWithLegacyMethods.call(void 0, users);\n  }\n  clearOthers() {\n    this._connections = {};\n    this._presences = {};\n    this._users = {};\n    this.invalidate();\n  }\n  _getUser(connectionId) {\n    const conn = this._connections[connectionId];\n    const presence = this._presences[connectionId];\n    if (conn !== void 0 && presence !== void 0) {\n      return makeUser(conn, presence);\n    }\n    return void 0;\n  }\n  getUser(connectionId) {\n    const cachedUser = this._users[connectionId];\n    if (cachedUser) {\n      return cachedUser;\n    }\n    const computedUser = this._getUser(connectionId);\n    if (computedUser) {\n      this._users[connectionId] = computedUser;\n      return computedUser;\n    }\n    return void 0;\n  }\n  _invalidateUser(connectionId) {\n    if (this._users[connectionId] !== void 0) {\n      delete this._users[connectionId];\n    }\n    this.invalidate();\n  }\n  setConnection(connectionId, metaUserId, metaUserInfo) {\n    this._connections[connectionId] = _chunkUV2F4F4Rjs.freeze.call(void 0, {\n      connectionId,\n      id: metaUserId,\n      info: metaUserInfo\n    });\n    if (this._presences[connectionId] !== void 0) {\n      this._invalidateUser(connectionId);\n    }\n  }\n  removeConnection(connectionId) {\n    delete this._connections[connectionId];\n    delete this._presences[connectionId];\n    this._invalidateUser(connectionId);\n  }\n  setOther(connectionId, presence) {\n    this._presences[connectionId] = _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, presence));\n    if (this._connections[connectionId] !== void 0) {\n      this._invalidateUser(connectionId);\n    }\n  }\n  patchOther(connectionId, patch) {\n    const oldPresence = this._presences[connectionId];\n    if (oldPresence === void 0) {\n      return;\n    }\n    const newPresence = merge(oldPresence, patch);\n    if (oldPresence !== newPresence) {\n      this._presences[connectionId] = _chunkUV2F4F4Rjs.freeze.call(void 0, newPresence);\n      this._invalidateUser(connectionId);\n    }\n  }\n};\n\n// src/ValueRef.ts\nvar ValueRef = class extends ImmutableRef {\n  constructor(initialValue) {\n    super();\n    this._value = _chunkUV2F4F4Rjs.freeze.call(void 0, _chunkUV2F4F4Rjs.compactObject.call(void 0, initialValue));\n  }\n  _toImmutable() {\n    return this._value;\n  }\n  set(newValue) {\n    this._value = _chunkUV2F4F4Rjs.freeze.call(void 0, newValue);\n    this.invalidate();\n  }\n};\nvar DerivedRef = class extends ImmutableRef {\n  constructor(otherRefs, transformFn) {\n    super();\n    this._refs = otherRefs;\n    this._refs.forEach((ref) => {\n      ref.didInvalidate.subscribe(() => this.invalidate());\n    });\n    this._transform = transformFn;\n  }\n  _toImmutable() {\n    return this._transform(this._refs[0].current, this._refs[1].current);\n  }\n};\n\n// src/room.ts\nvar BACKOFF_RETRY_DELAYS = [250, 500, 1e3, 2e3, 4e3, 8e3, 1e4];\nvar BACKOFF_RETRY_DELAYS_SLOW = [2e3, 3e4, 6e4, 3e5];\nvar HEARTBEAT_INTERVAL = 3e4;\nvar PONG_TIMEOUT = 2e3;\nfunction makeIdFactory(connectionId) {\n  let count = 0;\n  return () => `${connectionId}:${count++}`;\n}\nfunction log(..._params) {\n  return;\n}\nfunction isConnectionSelfAware(connection) {\n  return connection.state === \"open\" || connection.state === \"connecting\";\n}\nfunction makeStateMachine(state, config, mockedEffects) {\n  const pool = {\n    roomId: config.roomId,\n    getNode: (id) => state.nodes.get(id),\n    addNode: (id, node) => void state.nodes.set(id, node),\n    deleteNode: (id) => void state.nodes.delete(id),\n    generateId: () => `${getConnectionId()}:${state.clock++}`,\n    generateOpId: () => `${getConnectionId()}:${state.opClock++}`,\n    dispatch(ops, reverse, storageUpdates) {\n      const activeBatch = state.activeBatch;\n      if (activeBatch) {\n        activeBatch.ops.push(...ops);\n        storageUpdates.forEach((value, key) => {\n          activeBatch.updates.storageUpdates.set(\n            key,\n            _chunkUV2F4F4Rjs.mergeStorageUpdates.call(void 0, \n              activeBatch.updates.storageUpdates.get(key),\n              value\n            )\n          );\n        });\n        activeBatch.reverseOps.push(...reverse);\n      } else {\n        addToUndoStack(reverse);\n        state.redoStack = [];\n        dispatchOps(ops);\n        notify({ storageUpdates });\n      }\n    }\n  };\n  const eventHub = {\n    customEvent: makeEventSource(),\n    me: makeEventSource(),\n    others: makeEventSource(),\n    error: makeEventSource(),\n    connection: makeEventSource(),\n    storage: makeEventSource(),\n    history: makeEventSource(),\n    storageDidLoad: makeEventSource()\n  };\n  const effects = mockedEffects || {\n    authenticate(auth, createWebSocket) {\n      const rawToken = state.token;\n      const parsedToken = rawToken !== null && _chunkUV2F4F4Rjs.parseRoomAuthToken.call(void 0, rawToken);\n      if (parsedToken && !_chunkUV2F4F4Rjs.isTokenExpired.call(void 0, parsedToken)) {\n        const socket = createWebSocket(rawToken);\n        authenticationSuccess(parsedToken, socket);\n      } else {\n        return auth(config.roomId).then(({ token }) => {\n          if (state.connection.current.state !== \"authenticating\") {\n            return;\n          }\n          const parsedToken2 = _chunkUV2F4F4Rjs.parseRoomAuthToken.call(void 0, token);\n          const socket = createWebSocket(token);\n          authenticationSuccess(parsedToken2, socket);\n          state.token = token;\n        }).catch(\n          (er) => authenticationFailure(\n            er instanceof Error ? er : new Error(String(er))\n          )\n        );\n      }\n    },\n    send(messageOrMessages) {\n      if (state.socket === null) {\n        throw new Error(\"Can't send message if socket is null\");\n      }\n      state.socket.send(JSON.stringify(messageOrMessages));\n    },\n    delayFlush(delay) {\n      return setTimeout(tryFlushing, delay);\n    },\n    startHeartbeatInterval() {\n      return setInterval(heartbeat, HEARTBEAT_INTERVAL);\n    },\n    schedulePongTimeout() {\n      return setTimeout(pongTimeout, PONG_TIMEOUT);\n    },\n    scheduleReconnect(delay) {\n      return setTimeout(connect, delay);\n    }\n  };\n  const self = new DerivedRef(\n    [state.connection, state.me],\n    (conn, me) => isConnectionSelfAware(conn) ? {\n      connectionId: conn.id,\n      id: conn.userId,\n      info: conn.userInfo,\n      presence: me\n    } : null\n  );\n  function createOrUpdateRootFromMessage(message) {\n    if (message.items.length === 0) {\n      throw new Error(\"Internal error: cannot load storage without items\");\n    }\n    if (state.root) {\n      updateRoot(message.items);\n    } else {\n      state.root = load(message.items);\n    }\n    for (const key in state.initialStorage) {\n      if (state.root.get(key) === void 0) {\n        state.root.set(key, state.initialStorage[key]);\n      }\n    }\n  }\n  function buildRootAndParentToChildren(items) {\n    const parentToChildren = /* @__PURE__ */ new Map();\n    let root = null;\n    for (const [id, crdt] of items) {\n      if (_chunkUV2F4F4Rjs.isRootCrdt.call(void 0, crdt)) {\n        root = [id, crdt];\n      } else {\n        const tuple = [id, crdt];\n        const children = parentToChildren.get(crdt.parentId);\n        if (children !== void 0) {\n          children.push(tuple);\n        } else {\n          parentToChildren.set(crdt.parentId, [tuple]);\n        }\n      }\n    }\n    if (root === null) {\n      throw new Error(\"Root can't be null\");\n    }\n    return [root, parentToChildren];\n  }\n  function updateRoot(items) {\n    if (!state.root) {\n      return;\n    }\n    const currentItems = /* @__PURE__ */ new Map();\n    state.nodes.forEach((node, id) => {\n      currentItems.set(id, node._serialize());\n    });\n    const ops = _chunkUV2F4F4Rjs.getTreesDiffOperations.call(void 0, currentItems, new Map(items));\n    const result = apply(ops, false);\n    notify(result.updates);\n  }\n  function load(items) {\n    const [root, parentToChildren] = buildRootAndParentToChildren(items);\n    return _chunkUV2F4F4Rjs.LiveObject._deserialize(root, parentToChildren, pool);\n  }\n  function _addToRealUndoStack(historyOps) {\n    if (state.undoStack.length >= 50) {\n      state.undoStack.shift();\n    }\n    state.undoStack.push(historyOps);\n    onHistoryChange();\n  }\n  function addToUndoStack(historyOps) {\n    if (state.pausedHistory !== null) {\n      state.pausedHistory.unshift(...historyOps);\n    } else {\n      _addToRealUndoStack(historyOps);\n    }\n  }\n  function notify({\n    storageUpdates = /* @__PURE__ */ new Map(),\n    presence = false,\n    others: otherEvents = []\n  }) {\n    if (otherEvents.length > 0) {\n      const others = state.others.current;\n      for (const event of otherEvents) {\n        eventHub.others.notify({ others, event });\n      }\n    }\n    if (presence) {\n      eventHub.me.notify(state.me.current);\n    }\n    if (storageUpdates.size > 0) {\n      const updates = Array.from(storageUpdates.values());\n      eventHub.storage.notify(updates);\n    }\n  }\n  function getConnectionId() {\n    const conn = state.connection.current;\n    if (isConnectionSelfAware(conn)) {\n      return conn.id;\n    } else if (state.lastConnectionId !== null) {\n      return state.lastConnectionId;\n    }\n    throw new Error(\n      \"Internal. Tried to get connection id but connection was never open\"\n    );\n  }\n  function apply(ops, isLocal) {\n    const result = {\n      reverse: [],\n      updates: {\n        storageUpdates: /* @__PURE__ */ new Map(),\n        presence: false\n      }\n    };\n    const createdNodeIds = /* @__PURE__ */ new Set();\n    for (const op of ops) {\n      if (op.type === \"presence\") {\n        const reverse = {\n          type: \"presence\",\n          data: {}\n        };\n        for (const key in op.data) {\n          reverse.data[key] = state.me.current[key];\n        }\n        state.me.patch(op.data);\n        if (state.buffer.me === null) {\n          state.buffer.me = { type: \"partial\", data: op.data };\n        } else {\n          for (const key in op.data) {\n            state.buffer.me.data[key] = op.data[key];\n          }\n        }\n        result.reverse.unshift(reverse);\n        result.updates.presence = true;\n      } else {\n        let source;\n        if (!op.opId) {\n          op.opId = pool.generateOpId();\n        }\n        if (isLocal) {\n          source = 0 /* UNDOREDO_RECONNECT */;\n        } else {\n          const deleted = state.offlineOperations.delete(_chunkUV2F4F4Rjs.nn.call(void 0, op.opId));\n          source = deleted ? 2 /* ACK */ : 1 /* REMOTE */;\n        }\n        const applyOpResult = applyOp(op, source);\n        if (applyOpResult.modified) {\n          const parentId = applyOpResult.modified.node.parent.type === \"HasParent\" ? _chunkUV2F4F4Rjs.nn.call(void 0, \n            applyOpResult.modified.node.parent.node._id,\n            \"Expected parent node to have an ID\"\n          ) : void 0;\n          if (!parentId || !createdNodeIds.has(parentId)) {\n            result.updates.storageUpdates.set(\n              _chunkUV2F4F4Rjs.nn.call(void 0, applyOpResult.modified.node._id),\n              _chunkUV2F4F4Rjs.mergeStorageUpdates.call(void 0, \n                result.updates.storageUpdates.get(\n                  _chunkUV2F4F4Rjs.nn.call(void 0, applyOpResult.modified.node._id)\n                ),\n                applyOpResult.modified\n              )\n            );\n            result.reverse.unshift(...applyOpResult.reverse);\n          }\n          if (op.type === 2 /* CREATE_LIST */ || op.type === 7 /* CREATE_MAP */ || op.type === 4 /* CREATE_OBJECT */) {\n            createdNodeIds.add(_chunkUV2F4F4Rjs.nn.call(void 0, applyOpResult.modified.node._id));\n          }\n        }\n      }\n    }\n    return result;\n  }\n  function applyOp(op, source) {\n    switch (op.type) {\n      case 6 /* DELETE_OBJECT_KEY */:\n      case 3 /* UPDATE_OBJECT */:\n      case 5 /* DELETE_CRDT */: {\n        const node = state.nodes.get(op.id);\n        if (node === void 0) {\n          return { modified: false };\n        }\n        return node._apply(op, source === 0 /* UNDOREDO_RECONNECT */);\n      }\n      case 1 /* SET_PARENT_KEY */: {\n        const node = state.nodes.get(op.id);\n        if (node === void 0) {\n          return { modified: false };\n        }\n        if (node.parent.type === \"HasParent\" && _chunkUV2F4F4Rjs.isLiveList.call(void 0, node.parent.node)) {\n          return node.parent.node._setChildKey(op.parentKey, node, source);\n        }\n        return { modified: false };\n      }\n      case 4 /* CREATE_OBJECT */:\n      case 2 /* CREATE_LIST */:\n      case 7 /* CREATE_MAP */:\n      case 8 /* CREATE_REGISTER */: {\n        if (op.parentId === void 0) {\n          return { modified: false };\n        }\n        const parentNode = state.nodes.get(op.parentId);\n        if (parentNode === void 0) {\n          return { modified: false };\n        }\n        return parentNode._attachChild(op, source);\n      }\n    }\n  }\n  function subscribeToLiveStructureDeeply(node, callback) {\n    return eventHub.storage.subscribe((updates) => {\n      const relatedUpdates = updates.filter(\n        (update) => _chunkUV2F4F4Rjs.isSameNodeOrChildOf.call(void 0, update.node, node)\n      );\n      if (relatedUpdates.length > 0) {\n        callback(relatedUpdates);\n      }\n    });\n  }\n  function subscribeToLiveStructureShallowly(node, callback) {\n    return eventHub.storage.subscribe((updates) => {\n      for (const update of updates) {\n        if (update.node._id === node._id) {\n          callback(update.node);\n        }\n      }\n    });\n  }\n  function subscribe(first, second, options) {\n    if (typeof first === \"string\" && _chunkUV2F4F4Rjs.isRoomEventName.call(void 0, first)) {\n      if (typeof second !== \"function\") {\n        throw new Error(\"Second argument must be a callback function\");\n      }\n      const callback = second;\n      switch (first) {\n        case \"event\":\n          return eventHub.customEvent.subscribe(\n            callback\n          );\n        case \"my-presence\":\n          return eventHub.me.subscribe(callback);\n        case \"others\": {\n          const cb = callback;\n          return eventHub.others.subscribe(\n            ({ others, event }) => cb(others, event)\n          );\n        }\n        case \"error\":\n          return eventHub.error.subscribe(callback);\n        case \"connection\":\n          return eventHub.connection.subscribe(\n            callback\n          );\n        case \"storage\":\n          return eventHub.storage.subscribe(\n            callback\n          );\n        case \"history\":\n          return eventHub.history.subscribe(callback);\n        default:\n          return _chunkUV2F4F4Rjs.assertNever.call(void 0, first, \"Unknown event\");\n      }\n    }\n    if (second === void 0 || typeof first === \"function\") {\n      if (typeof first === \"function\") {\n        const storageCallback = first;\n        return eventHub.storage.subscribe(storageCallback);\n      } else {\n        throw new Error(\"Please specify a listener callback\");\n      }\n    }\n    if (_chunkUV2F4F4Rjs.isLiveNode.call(void 0, first)) {\n      const node = first;\n      if (options == null ? void 0 : options.isDeep) {\n        const storageCallback = second;\n        return subscribeToLiveStructureDeeply(node, storageCallback);\n      } else {\n        const nodeCallback = second;\n        return subscribeToLiveStructureShallowly(node, nodeCallback);\n      }\n    }\n    throw new Error(`\"${first}\" is not a valid event name`);\n  }\n  function getConnectionState() {\n    return state.connection.current.state;\n  }\n  function connect() {\n    var _a, _b, _c, _d;\n    if (state.connection.current.state !== \"closed\" && state.connection.current.state !== \"unavailable\") {\n      return null;\n    }\n    const auth = prepareAuthEndpoint(\n      config.authentication,\n      (_b = (_a = config.polyfills) == null ? void 0 : _a.fetch) != null ? _b : config.fetchPolyfill\n    );\n    const createWebSocket = prepareCreateWebSocket(\n      config.liveblocksServer,\n      (_d = (_c = config.polyfills) == null ? void 0 : _c.WebSocket) != null ? _d : config.WebSocketPolyfill\n    );\n    updateConnection({ state: \"authenticating\" });\n    effects.authenticate(auth, createWebSocket);\n  }\n  function updatePresence(patch, options) {\n    const oldValues = {};\n    if (state.buffer.me === null) {\n      state.buffer.me = {\n        type: \"partial\",\n        data: {}\n      };\n    }\n    for (const key in patch) {\n      const overrideValue = patch[key];\n      if (overrideValue === void 0) {\n        continue;\n      }\n      state.buffer.me.data[key] = overrideValue;\n      oldValues[key] = state.me.current[key];\n    }\n    state.me.patch(patch);\n    if (state.activeBatch) {\n      if (options == null ? void 0 : options.addToHistory) {\n        state.activeBatch.reverseOps.push({\n          type: \"presence\",\n          data: oldValues\n        });\n      }\n      state.activeBatch.updates.presence = true;\n    } else {\n      tryFlushing();\n      if (options == null ? void 0 : options.addToHistory) {\n        addToUndoStack([{ type: \"presence\", data: oldValues }]);\n      }\n      notify({ presence: true });\n    }\n  }\n  function authenticationSuccess(token, socket) {\n    socket.addEventListener(\"message\", onMessage);\n    socket.addEventListener(\"open\", onOpen);\n    socket.addEventListener(\"close\", onClose);\n    socket.addEventListener(\"error\", onError);\n    updateConnection({\n      state: \"connecting\",\n      id: token.actor,\n      userInfo: token.info,\n      userId: token.id\n    });\n    state.idFactory = makeIdFactory(token.actor);\n    state.socket = socket;\n  }\n  function authenticationFailure(error) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(\"Call to authentication endpoint failed\", error);\n    }\n    state.token = null;\n    updateConnection({ state: \"unavailable\" });\n    state.numberOfRetry++;\n    state.timeoutHandles.reconnect = effects.scheduleReconnect(getRetryDelay());\n  }\n  function onVisibilityChange(visibilityState) {\n    if (visibilityState === \"visible\" && state.connection.current.state === \"open\") {\n      log(\"Heartbeat after visibility change\");\n      heartbeat();\n    }\n  }\n  function onUpdatePresenceMessage(message) {\n    if (message.targetActor !== void 0) {\n      const oldUser = state.others.getUser(message.actor);\n      state.others.setOther(message.actor, message.data);\n      const newUser = state.others.getUser(message.actor);\n      if (oldUser === void 0 && newUser !== void 0) {\n        return { type: \"enter\", user: newUser };\n      }\n    } else {\n      state.others.patchOther(message.actor, message.data), message;\n    }\n    const user = state.others.getUser(message.actor);\n    if (user) {\n      return {\n        type: \"update\",\n        updates: message.data,\n        user\n      };\n    } else {\n      return void 0;\n    }\n  }\n  function onUserLeftMessage(message) {\n    const user = state.others.getUser(message.actor);\n    if (user) {\n      state.others.removeConnection(message.actor);\n      return { type: \"leave\", user };\n    }\n    return null;\n  }\n  function onRoomStateMessage(message) {\n    for (const key in message.users) {\n      const user = message.users[key];\n      const connectionId = Number(key);\n      state.others.setConnection(connectionId, user.id, user.info);\n    }\n    return { type: \"reset\" };\n  }\n  function onNavigatorOnline() {\n    if (state.connection.current.state === \"unavailable\") {\n      log(\"Try to reconnect after connectivity change\");\n      reconnect();\n    }\n  }\n  function onHistoryChange() {\n    eventHub.history.notify({ canUndo: canUndo(), canRedo: canRedo() });\n  }\n  function onUserJoinedMessage(message) {\n    state.others.setConnection(message.actor, message.id, message.info);\n    state.buffer.messages.push({\n      type: 100 /* UPDATE_PRESENCE */,\n      data: state.me.current,\n      targetActor: message.actor\n    });\n    tryFlushing();\n    const user = state.others.getUser(message.actor);\n    return user ? { type: \"enter\", user } : void 0;\n  }\n  function parseServerMessage(data) {\n    if (!_chunkUV2F4F4Rjs.isJsonObject.call(void 0, data)) {\n      return null;\n    }\n    return data;\n  }\n  function parseServerMessages(text) {\n    const data = _chunkUV2F4F4Rjs.tryParseJson.call(void 0, text);\n    if (data === void 0) {\n      return null;\n    } else if (_chunkUV2F4F4Rjs.isJsonArray.call(void 0, data)) {\n      return _chunkUV2F4F4Rjs.compact.call(void 0, data.map((item) => parseServerMessage(item)));\n    } else {\n      return _chunkUV2F4F4Rjs.compact.call(void 0, [parseServerMessage(data)]);\n    }\n  }\n  function onMessage(event) {\n    if (event.data === \"pong\") {\n      clearTimeout(state.timeoutHandles.pongTimeout);\n      return;\n    }\n    const messages = parseServerMessages(event.data);\n    if (messages === null || messages.length === 0) {\n      return;\n    }\n    const updates = {\n      storageUpdates: /* @__PURE__ */ new Map(),\n      others: []\n    };\n    for (const message of messages) {\n      switch (message.type) {\n        case 101 /* USER_JOINED */: {\n          const userJoinedUpdate = onUserJoinedMessage(message);\n          if (userJoinedUpdate) {\n            updates.others.push(userJoinedUpdate);\n          }\n          break;\n        }\n        case 100 /* UPDATE_PRESENCE */: {\n          const othersPresenceUpdate = onUpdatePresenceMessage(message);\n          if (othersPresenceUpdate) {\n            updates.others.push(othersPresenceUpdate);\n          }\n          break;\n        }\n        case 103 /* BROADCASTED_EVENT */: {\n          eventHub.customEvent.notify({\n            connectionId: message.actor,\n            event: message.event\n          });\n          break;\n        }\n        case 102 /* USER_LEFT */: {\n          const event2 = onUserLeftMessage(message);\n          if (event2) {\n            updates.others.push(event2);\n          }\n          break;\n        }\n        case 104 /* ROOM_STATE */: {\n          updates.others.push(onRoomStateMessage(message));\n          break;\n        }\n        case 200 /* INITIAL_STORAGE_STATE */: {\n          const offlineOps = new Map(state.offlineOperations);\n          createOrUpdateRootFromMessage(message);\n          applyAndSendOfflineOps(offlineOps);\n          _getInitialStateResolver == null ? void 0 : _getInitialStateResolver();\n          eventHub.storageDidLoad.notify();\n          break;\n        }\n        case 201 /* UPDATE_STORAGE */: {\n          const applyResult = apply(message.ops, false);\n          applyResult.updates.storageUpdates.forEach((value, key) => {\n            updates.storageUpdates.set(\n              key,\n              _chunkUV2F4F4Rjs.mergeStorageUpdates.call(void 0, \n                updates.storageUpdates.get(key),\n                value\n              )\n            );\n          });\n          break;\n        }\n      }\n    }\n    notify(updates);\n  }\n  function onClose(event) {\n    state.socket = null;\n    clearTimeout(state.timeoutHandles.pongTimeout);\n    clearInterval(state.intervalHandles.heartbeat);\n    if (state.timeoutHandles.flush) {\n      clearTimeout(state.timeoutHandles.flush);\n    }\n    clearTimeout(state.timeoutHandles.reconnect);\n    state.others.clearOthers();\n    notify({ others: [{ type: \"reset\" }] });\n    if (event.code >= 4e3 && event.code <= 4100) {\n      updateConnection({ state: \"failed\" });\n      const error = new LiveblocksError(event.reason, event.code);\n      eventHub.error.notify(error);\n      const delay = getRetryDelay(true);\n      state.numberOfRetry++;\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\n          `Connection to Liveblocks websocket server closed. Reason: ${error.message} (code: ${error.code}). Retrying in ${delay}ms.`\n        );\n      }\n      updateConnection({ state: \"unavailable\" });\n      state.timeoutHandles.reconnect = effects.scheduleReconnect(delay);\n    } else if (event.code === 4999 /* CLOSE_WITHOUT_RETRY */) {\n      updateConnection({ state: \"closed\" });\n    } else {\n      const delay = getRetryDelay();\n      state.numberOfRetry++;\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          `Connection to Liveblocks websocket server closed (code: ${event.code}). Retrying in ${delay}ms.`\n        );\n      }\n      updateConnection({ state: \"unavailable\" });\n      state.timeoutHandles.reconnect = effects.scheduleReconnect(delay);\n    }\n  }\n  function updateConnection(connection) {\n    state.connection.set(connection);\n    eventHub.connection.notify(connection.state);\n  }\n  function getRetryDelay(slow = false) {\n    if (slow) {\n      return BACKOFF_RETRY_DELAYS_SLOW[state.numberOfRetry < BACKOFF_RETRY_DELAYS_SLOW.length ? state.numberOfRetry : BACKOFF_RETRY_DELAYS_SLOW.length - 1];\n    }\n    return BACKOFF_RETRY_DELAYS[state.numberOfRetry < BACKOFF_RETRY_DELAYS.length ? state.numberOfRetry : BACKOFF_RETRY_DELAYS.length - 1];\n  }\n  function onError() {\n  }\n  function onOpen() {\n    clearInterval(state.intervalHandles.heartbeat);\n    state.intervalHandles.heartbeat = effects.startHeartbeatInterval();\n    if (state.connection.current.state === \"connecting\") {\n      updateConnection(_chunkUV2F4F4Rjs.__spreadProps.call(void 0, _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, state.connection.current), { state: \"open\" }));\n      state.numberOfRetry = 0;\n      if (state.lastConnectionId !== void 0) {\n        state.buffer.me = {\n          type: \"full\",\n          data: _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, state.me.current)\n        };\n        tryFlushing();\n      }\n      state.lastConnectionId = state.connection.current.id;\n      if (state.root) {\n        state.buffer.messages.push({ type: 200 /* FETCH_STORAGE */ });\n      }\n      tryFlushing();\n    } else {\n    }\n  }\n  function heartbeat() {\n    if (state.socket === null) {\n      return;\n    }\n    clearTimeout(state.timeoutHandles.pongTimeout);\n    state.timeoutHandles.pongTimeout = effects.schedulePongTimeout();\n    if (state.socket.readyState === state.socket.OPEN) {\n      state.socket.send(\"ping\");\n    }\n  }\n  function pongTimeout() {\n    log(\"Pong timeout. Trying to reconnect.\");\n    reconnect();\n  }\n  function reconnect() {\n    if (state.socket) {\n      state.socket.removeEventListener(\"open\", onOpen);\n      state.socket.removeEventListener(\"message\", onMessage);\n      state.socket.removeEventListener(\"close\", onClose);\n      state.socket.removeEventListener(\"error\", onError);\n      state.socket.close();\n      state.socket = null;\n    }\n    updateConnection({ state: \"unavailable\" });\n    clearTimeout(state.timeoutHandles.pongTimeout);\n    if (state.timeoutHandles.flush) {\n      clearTimeout(state.timeoutHandles.flush);\n    }\n    clearTimeout(state.timeoutHandles.reconnect);\n    clearInterval(state.intervalHandles.heartbeat);\n    connect();\n  }\n  function applyAndSendOfflineOps(offlineOps) {\n    if (offlineOps.size === 0) {\n      return;\n    }\n    const messages = [];\n    const ops = Array.from(offlineOps.values());\n    const result = apply(ops, true);\n    messages.push({\n      type: 201 /* UPDATE_STORAGE */,\n      ops\n    });\n    notify(result.updates);\n    effects.send(messages);\n  }\n  function tryFlushing() {\n    const storageOps = state.buffer.storageOperations;\n    if (storageOps.length > 0) {\n      storageOps.forEach((op) => {\n        state.offlineOperations.set(_chunkUV2F4F4Rjs.nn.call(void 0, op.opId), op);\n      });\n    }\n    if (state.socket === null || state.socket.readyState !== state.socket.OPEN) {\n      state.buffer.storageOperations = [];\n      return;\n    }\n    const now = Date.now();\n    const elapsedTime = now - state.lastFlushTime;\n    if (elapsedTime > config.throttleDelay) {\n      const messages = flushDataToMessages(state);\n      if (messages.length === 0) {\n        return;\n      }\n      effects.send(messages);\n      state.buffer = {\n        messages: [],\n        storageOperations: [],\n        me: null\n      };\n      state.lastFlushTime = now;\n    } else {\n      if (state.timeoutHandles.flush !== null) {\n        clearTimeout(state.timeoutHandles.flush);\n      }\n      state.timeoutHandles.flush = effects.delayFlush(\n        config.throttleDelay - (now - state.lastFlushTime)\n      );\n    }\n  }\n  function flushDataToMessages(state2) {\n    const messages = [];\n    if (state2.buffer.me) {\n      messages.push(\n        state2.buffer.me.type === \"full\" ? {\n          type: 100 /* UPDATE_PRESENCE */,\n          targetActor: -1,\n          data: state2.buffer.me.data\n        } : {\n          type: 100 /* UPDATE_PRESENCE */,\n          data: state2.buffer.me.data\n        }\n      );\n    }\n    for (const event of state2.buffer.messages) {\n      messages.push(event);\n    }\n    if (state2.buffer.storageOperations.length > 0) {\n      messages.push({\n        type: 201 /* UPDATE_STORAGE */,\n        ops: state2.buffer.storageOperations\n      });\n    }\n    return messages;\n  }\n  function disconnect() {\n    if (state.socket) {\n      state.socket.removeEventListener(\"open\", onOpen);\n      state.socket.removeEventListener(\"message\", onMessage);\n      state.socket.removeEventListener(\"close\", onClose);\n      state.socket.removeEventListener(\"error\", onError);\n      state.socket.close();\n      state.socket = null;\n    }\n    updateConnection({ state: \"closed\" });\n    if (state.timeoutHandles.flush) {\n      clearTimeout(state.timeoutHandles.flush);\n    }\n    clearTimeout(state.timeoutHandles.reconnect);\n    clearTimeout(state.timeoutHandles.pongTimeout);\n    clearInterval(state.intervalHandles.heartbeat);\n    state.others.clearOthers();\n    notify({ others: [{ type: \"reset\" }] });\n    Object.values(eventHub).forEach((eventSource) => eventSource.clear());\n  }\n  function getPresence() {\n    return state.me.current;\n  }\n  function getOthers() {\n    return state.others.current;\n  }\n  function broadcastEvent(event, options = {\n    shouldQueueEventIfNotReady: false\n  }) {\n    if (state.socket === null && !options.shouldQueueEventIfNotReady) {\n      return;\n    }\n    state.buffer.messages.push({\n      type: 103 /* BROADCAST_EVENT */,\n      event\n    });\n    tryFlushing();\n  }\n  function dispatchOps(ops) {\n    state.buffer.storageOperations.push(...ops);\n    tryFlushing();\n  }\n  let _getInitialStatePromise = null;\n  let _getInitialStateResolver = null;\n  function startLoadingStorage() {\n    if (_getInitialStatePromise === null) {\n      state.buffer.messages.push({ type: 200 /* FETCH_STORAGE */ });\n      tryFlushing();\n      _getInitialStatePromise = new Promise(\n        (resolve) => _getInitialStateResolver = resolve\n      );\n    }\n    return _getInitialStatePromise;\n  }\n  function getStorageSnapshot() {\n    const root = state.root;\n    if (root !== void 0) {\n      return root;\n    } else {\n      startLoadingStorage();\n      return null;\n    }\n  }\n  function getStorage() {\n    return _chunkUV2F4F4Rjs.__async.call(void 0, this, null, function* () {\n      if (state.root) {\n        return Promise.resolve({\n          root: state.root\n        });\n      }\n      yield startLoadingStorage();\n      return {\n        root: _chunkUV2F4F4Rjs.nn.call(void 0, state.root)\n      };\n    });\n  }\n  function undo() {\n    if (state.activeBatch) {\n      throw new Error(\"undo is not allowed during a batch\");\n    }\n    const historyOps = state.undoStack.pop();\n    if (historyOps === void 0) {\n      return;\n    }\n    state.pausedHistory = null;\n    const result = apply(historyOps, true);\n    notify(result.updates);\n    state.redoStack.push(result.reverse);\n    onHistoryChange();\n    for (const op of historyOps) {\n      if (op.type !== \"presence\") {\n        state.buffer.storageOperations.push(op);\n      }\n    }\n    tryFlushing();\n  }\n  function canUndo() {\n    return state.undoStack.length > 0;\n  }\n  function redo() {\n    if (state.activeBatch) {\n      throw new Error(\"redo is not allowed during a batch\");\n    }\n    const historyOps = state.redoStack.pop();\n    if (historyOps === void 0) {\n      return;\n    }\n    state.pausedHistory = null;\n    const result = apply(historyOps, true);\n    notify(result.updates);\n    state.undoStack.push(result.reverse);\n    onHistoryChange();\n    for (const op of historyOps) {\n      if (op.type !== \"presence\") {\n        state.buffer.storageOperations.push(op);\n      }\n    }\n    tryFlushing();\n  }\n  function canRedo() {\n    return state.redoStack.length > 0;\n  }\n  function batch(callback) {\n    if (state.activeBatch) {\n      return callback();\n    }\n    state.activeBatch = {\n      ops: [],\n      updates: {\n        storageUpdates: /* @__PURE__ */ new Map(),\n        presence: false,\n        others: []\n      },\n      reverseOps: []\n    };\n    try {\n      return callback();\n    } finally {\n      const currentBatch = state.activeBatch;\n      state.activeBatch = null;\n      if (currentBatch.reverseOps.length > 0) {\n        addToUndoStack(currentBatch.reverseOps);\n      }\n      if (currentBatch.ops.length > 0) {\n        state.redoStack = [];\n      }\n      if (currentBatch.ops.length > 0) {\n        dispatchOps(currentBatch.ops);\n      }\n      notify(currentBatch.updates);\n      tryFlushing();\n    }\n  }\n  function pauseHistory() {\n    state.pausedHistory = [];\n  }\n  function resumeHistory() {\n    const historyOps = state.pausedHistory;\n    state.pausedHistory = null;\n    if (historyOps !== null && historyOps.length > 0) {\n      _addToRealUndoStack(historyOps);\n    }\n  }\n  function simulateSocketClose() {\n    if (state.socket) {\n      state.socket = null;\n    }\n  }\n  function simulateSendCloseEvent(event) {\n    onClose(event);\n  }\n  return {\n    onClose,\n    onMessage,\n    authenticationSuccess,\n    heartbeat,\n    onNavigatorOnline,\n    simulateSocketClose,\n    simulateSendCloseEvent,\n    onVisibilityChange,\n    getUndoStack: () => state.undoStack,\n    getItemsCount: () => state.nodes.size,\n    connect,\n    disconnect,\n    subscribe,\n    updatePresence,\n    broadcastEvent,\n    batch,\n    undo,\n    redo,\n    canUndo,\n    canRedo,\n    pauseHistory,\n    resumeHistory,\n    getStorage,\n    getStorageSnapshot,\n    events: {\n      customEvent: eventHub.customEvent.observable,\n      others: eventHub.others.observable,\n      me: eventHub.me.observable,\n      error: eventHub.error.observable,\n      connection: eventHub.connection.observable,\n      storage: eventHub.storage.observable,\n      history: eventHub.history.observable,\n      storageDidLoad: eventHub.storageDidLoad.observable\n    },\n    getConnectionState,\n    isSelfAware: () => isConnectionSelfAware(state.connection.current),\n    getSelf: () => self.current,\n    getPresence,\n    getOthers\n  };\n}\nfunction defaultState(initialPresence, initialStorage) {\n  const others = new OthersRef();\n  const connection = new ValueRef({ state: \"closed\" });\n  return {\n    token: null,\n    lastConnectionId: null,\n    socket: null,\n    numberOfRetry: 0,\n    lastFlushTime: 0,\n    timeoutHandles: {\n      flush: null,\n      reconnect: 0,\n      pongTimeout: 0\n    },\n    buffer: {\n      me: {\n        type: \"full\",\n        data: initialPresence\n      },\n      messages: [],\n      storageOperations: []\n    },\n    intervalHandles: {\n      heartbeat: 0\n    },\n    connection,\n    me: new MeRef(initialPresence),\n    others,\n    initialStorage,\n    idFactory: null,\n    clock: 0,\n    opClock: 0,\n    nodes: /* @__PURE__ */ new Map(),\n    root: void 0,\n    undoStack: [],\n    redoStack: [],\n    pausedHistory: null,\n    activeBatch: null,\n    offlineOperations: /* @__PURE__ */ new Map()\n  };\n}\nfunction createRoom(options, config) {\n  const { initialPresence, initialStorage } = options;\n  const state = defaultState(\n    typeof initialPresence === \"function\" ? initialPresence(config.roomId) : initialPresence,\n    typeof initialStorage === \"function\" ? initialStorage(config.roomId) : initialStorage\n  );\n  const machine = makeStateMachine(\n    state,\n    config\n  );\n  const room = {\n    id: config.roomId,\n    getConnectionState: machine.getConnectionState,\n    isSelfAware: machine.isSelfAware,\n    getSelf: machine.getSelf,\n    subscribe: machine.subscribe,\n    getPresence: machine.getPresence,\n    updatePresence: machine.updatePresence,\n    getOthers: machine.getOthers,\n    broadcastEvent: machine.broadcastEvent,\n    getStorage: machine.getStorage,\n    getStorageSnapshot: machine.getStorageSnapshot,\n    events: machine.events,\n    batch: machine.batch,\n    history: {\n      undo: machine.undo,\n      redo: machine.redo,\n      canUndo: machine.canUndo,\n      canRedo: machine.canRedo,\n      pause: machine.pauseHistory,\n      resume: machine.resumeHistory\n    },\n    __INTERNAL_DO_NOT_USE: {\n      simulateCloseWebsocket: machine.simulateSocketClose,\n      simulateSendCloseEvent: machine.simulateSendCloseEvent\n    }\n  };\n  return {\n    connect: machine.connect,\n    disconnect: machine.disconnect,\n    onNavigatorOnline: machine.onNavigatorOnline,\n    onVisibilityChange: machine.onVisibilityChange,\n    room\n  };\n}\nvar LiveblocksError = class extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n};\nfunction prepareCreateWebSocket(liveblocksServer, WebSocketPolyfill) {\n  if (typeof window === \"undefined\" && WebSocketPolyfill === void 0) {\n    throw new Error(\n      \"To use Liveblocks client in a non-dom environment, you need to provide a WebSocket polyfill.\"\n    );\n  }\n  const ws = WebSocketPolyfill || WebSocket;\n  return (token) => {\n    return new ws(\n      `${liveblocksServer}/?token=${token}&version=${true ? \"0.18.2\" : \"dev\"}`\n    );\n  };\n}\nfunction prepareAuthEndpoint(authentication, fetchPolyfill) {\n  if (authentication.type === \"public\") {\n    if (typeof window === \"undefined\" && fetchPolyfill === void 0) {\n      throw new Error(\n        \"To use Liveblocks client in a non-dom environment with a publicApiKey, you need to provide a fetch polyfill.\"\n      );\n    }\n    return (room) => fetchAuthEndpoint(fetchPolyfill || fetch, authentication.url, {\n      room,\n      publicApiKey: authentication.publicApiKey\n    });\n  }\n  if (authentication.type === \"private\") {\n    if (typeof window === \"undefined\" && fetchPolyfill === void 0) {\n      throw new Error(\n        \"To use Liveblocks client in a non-dom environment with a url as auth endpoint, you need to provide a fetch polyfill.\"\n      );\n    }\n    return (room) => fetchAuthEndpoint(fetchPolyfill || fetch, authentication.url, {\n      room\n    });\n  }\n  if (authentication.type === \"custom\") {\n    return (room) => _chunkUV2F4F4Rjs.__async.call(void 0, this, null, function* () {\n      const response = yield authentication.callback(room);\n      if (!response || !response.token) {\n        throw new Error(\n          'Authentication error. We expect the authentication callback to return a token, but it does not. Hint: the return value should look like: { token: \"...\" }'\n        );\n      }\n      return response;\n    });\n  }\n  throw new Error(\"Internal error. Unexpected authentication type\");\n}\nfunction fetchAuthEndpoint(fetch2, endpoint, body) {\n  return _chunkUV2F4F4Rjs.__async.call(void 0, this, null, function* () {\n    const res = yield fetch2(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    if (!res.ok) {\n      throw new AuthenticationError(\n        `Expected a status 200 but got ${res.status} when doing a POST request on \"${endpoint}\"`\n      );\n    }\n    let data;\n    try {\n      data = yield res.json();\n    } catch (er) {\n      throw new AuthenticationError(\n        `Expected a JSON response when doing a POST request on \"${endpoint}\". ${er}`\n      );\n    }\n    if (!_chunkUV2F4F4Rjs.isPlainObject.call(void 0, data) || typeof data.token !== \"string\") {\n      throw new AuthenticationError(\n        `Expected a JSON response of the form \\`{ token: \"...\" }\\` when doing a POST request on \"${endpoint}\", but got ${JSON.stringify(\n          data\n        )}`\n      );\n    }\n    const { token } = data;\n    return { token };\n  });\n}\nvar AuthenticationError = class extends Error {\n  constructor(message) {\n    super(message);\n  }\n};\n\n// src/client.ts\nfunction createClient(options) {\n  const clientOptions = options;\n  const throttleDelay = getThrottleDelayFromOptions(options);\n  const rooms = /* @__PURE__ */ new Map();\n  function getRoom(roomId) {\n    const internalRoom = rooms.get(roomId);\n    return internalRoom ? internalRoom.room : null;\n  }\n  function enter(roomId, options2) {\n    var _a, _b;\n    let internalRoom = rooms.get(roomId);\n    if (internalRoom) {\n      return internalRoom.room;\n    }\n    _chunkUV2F4F4Rjs.deprecateIf.call(void 0, \n      options2.initialPresence === null || options2.initialPresence === void 0,\n      \"Please provide an initial presence value for the current user when entering the room.\"\n    );\n    internalRoom = createRoom(\n      {\n        initialPresence: (_a = options2.initialPresence) != null ? _a : {},\n        initialStorage: options2.initialStorage\n      },\n      {\n        roomId,\n        throttleDelay,\n        polyfills: clientOptions.polyfills,\n        WebSocketPolyfill: clientOptions.WebSocketPolyfill,\n        fetchPolyfill: clientOptions.fetchPolyfill,\n        liveblocksServer: (clientOptions == null ? void 0 : clientOptions.liveblocksServer) || \"wss://api.liveblocks.io/v6\",\n        authentication: prepareAuthentication(clientOptions, roomId)\n      }\n    );\n    rooms.set(\n      roomId,\n      internalRoom\n    );\n    if (!options2.DO_NOT_USE_withoutConnecting) {\n      if (typeof atob === \"undefined\") {\n        if (((_b = clientOptions.polyfills) == null ? void 0 : _b.atob) === void 0) {\n          throw new Error(\n            \"You need to polyfill atob to use the client in your environment. Please follow the instructions at https://liveblocks.io/docs/errors/liveblocks-client/atob-polyfill\"\n          );\n        }\n        global.atob = clientOptions.polyfills.atob;\n      }\n      internalRoom.connect();\n    }\n    return internalRoom.room;\n  }\n  function leave(roomId) {\n    const room = rooms.get(roomId);\n    if (room) {\n      room.disconnect();\n      rooms.delete(roomId);\n    }\n  }\n  if (typeof window !== \"undefined\" && typeof window.addEventListener !== \"undefined\") {\n    window.addEventListener(\"online\", () => {\n      for (const [, room] of rooms) {\n        room.onNavigatorOnline();\n      }\n    });\n  }\n  if (typeof document !== \"undefined\") {\n    document.addEventListener(\"visibilitychange\", () => {\n      for (const [, room] of rooms) {\n        room.onVisibilityChange(document.visibilityState);\n      }\n    });\n  }\n  return {\n    getRoom,\n    enter,\n    leave\n  };\n}\nfunction getThrottleDelayFromOptions(options) {\n  if (options.throttle === void 0) {\n    return 100;\n  }\n  if (typeof options.throttle !== \"number\" || options.throttle < 80 || options.throttle > 1e3) {\n    throw new Error(\"throttle should be a number between 80 and 1000.\");\n  }\n  return options.throttle;\n}\nfunction prepareAuthentication(clientOptions, roomId) {\n  const { publicApiKey, authEndpoint } = clientOptions;\n  if (authEndpoint !== void 0 && publicApiKey !== void 0) {\n    throw new Error(\n      \"You cannot use both publicApiKey and authEndpoint. Please use either publicApiKey or authEndpoint, but not both. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient\"\n    );\n  }\n  if (typeof publicApiKey === \"string\") {\n    if (publicApiKey.startsWith(\"sk_\")) {\n      throw new Error(\n        \"Invalid publicApiKey. You are using the secret key which is not supported. Please use the public key instead. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey\"\n      );\n    } else if (!publicApiKey.startsWith(\"pk_\")) {\n      throw new Error(\n        \"Invalid key. Please use the public key format: pk_<public key>. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey\"\n      );\n    }\n    return {\n      type: \"public\",\n      publicApiKey,\n      url: buildLiveblocksPublicAuthorizeEndpoint(clientOptions, roomId)\n    };\n  }\n  if (typeof authEndpoint === \"string\") {\n    return {\n      type: \"private\",\n      url: authEndpoint\n    };\n  } else if (typeof authEndpoint === \"function\") {\n    return {\n      type: \"custom\",\n      callback: authEndpoint\n    };\n  } else if (authEndpoint !== void 0) {\n    throw new Error(\n      \"authEndpoint must be a string or a function. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientAuthEndpoint\"\n    );\n  }\n  throw new Error(\n    \"Invalid Liveblocks client options. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient\"\n  );\n}\nfunction buildLiveblocksPublicAuthorizeEndpoint(options, roomId) {\n  if (options.publicAuthorizeEndpoint) {\n    return options.publicAuthorizeEndpoint.replace(\"{roomId}\", roomId);\n  }\n  return `https://api.liveblocks.io/v2/rooms/${encodeURIComponent(\n    roomId\n  )}/public/authorize`;\n}\n\n// src/shallow.ts\nfunction shallowArray(xs, ys) {\n  if (xs.length !== ys.length) {\n    return false;\n  }\n  for (let i = 0; i < xs.length; i++) {\n    if (!Object.is(xs[i], ys[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction shallowObj(objA, objB) {\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null || Object.prototype.toString.call(objA) !== \"[object Object]\" || Object.prototype.toString.call(objB) !== \"[object Object]\") {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  return keysA.every(\n    (key) => Object.prototype.hasOwnProperty.call(objB, key) && Object.is(objA[key], objB[key])\n  );\n}\nfunction shallow(a, b) {\n  if (Object.is(a, b)) {\n    return true;\n  }\n  const isArrayA = Array.isArray(a);\n  const isArrayB = Array.isArray(b);\n  if (isArrayA || isArrayB) {\n    if (!isArrayA || !isArrayB) {\n      return false;\n    }\n    return shallowArray(a, b);\n  }\n  return shallowObj(a, b);\n}\n\n\n\n\n\n\nexports.LiveList = _chunkUV2F4F4Rjs.LiveList; exports.LiveMap = _chunkUV2F4F4Rjs.LiveMap; exports.LiveObject = _chunkUV2F4F4Rjs.LiveObject; exports.createClient = createClient; exports.shallow = shallow;\n"]},"metadata":{},"sourceType":"script"}