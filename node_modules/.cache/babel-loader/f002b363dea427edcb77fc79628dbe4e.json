{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n} // src/ClientSideSuspense.tsx\n\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar React2 = _interopRequireWildcard(_react);\n\nfunction ClientSideSuspense(props) {\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  return /* @__PURE__ */React.createElement(React.Suspense, {\n    fallback: props.fallback\n  }, mounted ? props.children() : props.fallback);\n} // src/factory.tsx\n\n\nvar _client = require('@liveblocks/client');\n\nvar _internal = require('@liveblocks/client/internal');\n\nvar _withselector = require('use-sync-external-store/shim/with-selector'); // src/hooks.ts\n\n\nfunction useRerender() {\n  const [, update] = _react.useReducer.call(void 0, x => x + 1, 0);\n\n  return update;\n}\n\nfunction useInitial(value) {\n  return _react.useRef.call(void 0, value).current;\n} // src/factory.tsx\n\n\nvar noop = () => {};\n\nvar identity = x => x;\n\nfunction useSyncExternalStore(s, g, gg) {\n  return _withselector.useSyncExternalStoreWithSelector.call(void 0, s, g, gg, identity);\n}\n\nvar EMPTY_OTHERS = _internal.asArrayWithLegacyMethods.call(void 0, []);\n\nfunction getEmptyOthers() {\n  return EMPTY_OTHERS;\n}\n\nfunction makeMutationContext(room) {\n  const errmsg = \"This mutation cannot be used until connected to the Liveblocks room\";\n  return {\n    get storage() {\n      const mutableRoot = room.getStorageSnapshot();\n\n      if (mutableRoot === null) {\n        throw new Error(errmsg);\n      }\n\n      return mutableRoot;\n    },\n\n    get self() {\n      const self = room.getSelf();\n\n      if (self === null) {\n        throw new Error(errmsg);\n      }\n\n      return self;\n    },\n\n    get others() {\n      const others = room.getOthers();\n\n      if (!room.isSelfAware()) {\n        throw new Error(errmsg);\n      }\n\n      return others;\n    },\n\n    setMyPresence: room.updatePresence\n  };\n}\n\nfunction createRoomContext(client) {\n  const RoomContext = React2.createContext(null);\n\n  function RoomProvider(props) {\n    const {\n      id: roomId,\n      initialPresence,\n      initialStorage\n    } = props;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!roomId) {\n        throw new Error(\"RoomProvider id property is required. For more information: https://liveblocks.io/docs/errors/liveblocks-react/RoomProvider-id-property-is-required\");\n      }\n\n      if (typeof roomId !== \"string\") {\n        throw new Error(\"RoomProvider id property should be a string.\");\n      }\n    }\n\n    const frozen = useInitial({\n      initialPresence,\n      initialStorage\n    });\n    const [room, setRoom] = React2.useState(() => client.enter(roomId, {\n      initialPresence,\n      initialStorage,\n      DO_NOT_USE_withoutConnecting: typeof window === \"undefined\"\n    }));\n    React2.useEffect(() => {\n      setRoom(client.enter(roomId, {\n        initialPresence: frozen.initialPresence,\n        initialStorage: frozen.initialStorage,\n        DO_NOT_USE_withoutConnecting: typeof window === \"undefined\"\n      }));\n      return () => {\n        client.leave(roomId);\n      };\n    }, [roomId, frozen]);\n    return /* @__PURE__ */React2.createElement(RoomContext.Provider, {\n      value: room\n    }, props.children);\n  }\n\n  function connectionIdSelector(others) {\n    return others.map(user => user.connectionId);\n  }\n\n  function useRoom() {\n    const room = React2.useContext(RoomContext);\n\n    if (room === null) {\n      throw new Error(\"RoomProvider is missing from the react tree\");\n    }\n\n    return room;\n  }\n\n  function useMyPresence() {\n    const room = useRoom();\n    const subscribe = room.events.me.subscribe;\n    const getSnapshot = room.getPresence;\n    const presence = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n    const setPresence = room.updatePresence;\n    return [presence, setPresence];\n  }\n\n  function useUpdateMyPresence() {\n    return useRoom().updatePresence;\n  }\n\n  function useOthers(selector, isEqual) {\n    const room = useRoom();\n    const subscribe = room.events.others.subscribe;\n    const getSnapshot = room.getOthers;\n    const getServerSnapshot = getEmptyOthers;\n    return _withselector.useSyncExternalStoreWithSelector.call(void 0, subscribe, getSnapshot, getServerSnapshot, selector != null ? selector : identity, isEqual);\n  }\n\n  function useOthersConnectionIds() {\n    return useOthers(connectionIdSelector, _client.shallow);\n  }\n\n  function useOthersMapped(itemSelector, itemIsEqual) {\n    const wrappedSelector = React2.useCallback(others => others.map(other => [other.connectionId, itemSelector(other)]), [itemSelector]);\n    const wrappedIsEqual = React2.useCallback((a, b) => {\n      const eq = itemIsEqual != null ? itemIsEqual : Object.is;\n      return a.length === b.length && a.every((atuple, index) => {\n        const btuple = b[index];\n        return atuple[0] === btuple[0] && eq(atuple[1], btuple[1]);\n      });\n    }, [itemIsEqual]);\n    return useOthers(wrappedSelector, wrappedIsEqual);\n  }\n\n  const NOT_FOUND = Symbol();\n\n  function useOther(connectionId, selector, isEqual) {\n    const lastKnownValue = React2.useRef(NOT_FOUND);\n    const wrappedSelector = React2.useCallback(others => {\n      const other2 = others.find(other3 => other3.connectionId === connectionId);\n\n      if (other2 !== void 0) {\n        const value = selector(other2);\n        lastKnownValue.current = value;\n        return value;\n      } else {\n        return lastKnownValue.current;\n      }\n    }, [connectionId, selector]);\n    const wrappedIsEqual = React2.useCallback((prev, curr) => {\n      if (prev === NOT_FOUND || curr === NOT_FOUND) {\n        return prev === curr;\n      }\n\n      const eq = isEqual != null ? isEqual : Object.is;\n      return eq(prev, curr);\n    }, [isEqual]);\n    const other = useOthers(wrappedSelector, wrappedIsEqual);\n\n    if (other === NOT_FOUND) {\n      throw new Error(`No such other user with connection id ${connectionId} exists`);\n    }\n\n    return other;\n  }\n\n  function useBroadcastEvent() {\n    const room = useRoom();\n    return React2.useCallback(function (event) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shouldQueueEventIfNotReady: false\n      };\n      room.broadcastEvent(event, options);\n    }, [room]);\n  }\n\n  function useErrorListener(callback) {\n    const room = useRoom();\n    const savedCallback = React2.useRef(callback);\n    React2.useEffect(() => {\n      savedCallback.current = callback;\n    });\n    React2.useEffect(() => room.events.error.subscribe(e => savedCallback.current(e)), [room]);\n  }\n\n  function useEventListener(callback) {\n    const room = useRoom();\n    const savedCallback = React2.useRef(callback);\n    React2.useEffect(() => {\n      savedCallback.current = callback;\n    });\n    React2.useEffect(() => {\n      const listener = eventData => {\n        savedCallback.current(eventData);\n      };\n\n      return room.events.customEvent.subscribe(listener);\n    }, [room]);\n  }\n\n  function useSelf(maybeSelector, isEqual) {\n    const room = useRoom();\n    const subscribe = React2.useCallback(onChange => {\n      const unsub1 = room.events.me.subscribe(onChange);\n      const unsub2 = room.events.connection.subscribe(onChange);\n      return () => {\n        unsub1();\n        unsub2();\n      };\n    }, [room]);\n    const getSnapshot = room.getSelf;\n    const selector = maybeSelector != null ? maybeSelector : identity;\n    const wrappedSelector = React2.useCallback(me => me !== null ? selector(me) : null, [selector]);\n    const getServerSnapshot = React2.useCallback(() => null, []);\n    return _withselector.useSyncExternalStoreWithSelector.call(void 0, subscribe, getSnapshot, getServerSnapshot, wrappedSelector, isEqual);\n  }\n\n  function useMutableStorageRoot() {\n    const room = useRoom();\n    const subscribe = room.events.storageDidLoad.subscribeOnce;\n    const getSnapshot = room.getStorageSnapshot;\n    const getServerSnapshot = React2.useCallback(() => null, []);\n    return useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  }\n\n  function useStorageRoot() {\n    return [useMutableStorageRoot()];\n  }\n\n  function useHistory() {\n    return useRoom().history;\n  }\n\n  function useUndo() {\n    return useHistory().undo;\n  }\n\n  function useRedo() {\n    return useHistory().redo;\n  }\n\n  function useCanUndo() {\n    const room = useRoom();\n    const subscribe = room.events.history.subscribe;\n    const canUndo = room.history.canUndo;\n    return useSyncExternalStore(subscribe, canUndo, canUndo);\n  }\n\n  function useCanRedo() {\n    const room = useRoom();\n    const subscribe = room.events.history.subscribe;\n    const canRedo = room.history.canRedo;\n    return useSyncExternalStore(subscribe, canRedo, canRedo);\n  }\n\n  function useBatch() {\n    return useRoom().batch;\n  }\n\n  function useLegacyKey(key) {\n    const room = useRoom();\n    const root = useMutableStorageRoot();\n    const rerender = useRerender();\n    React2.useEffect(() => {\n      if (root === null) {\n        return;\n      }\n\n      let liveValue = root.get(key);\n\n      function onRootChange() {\n        const newCrdt = root.get(key);\n\n        if (newCrdt !== liveValue) {\n          unsubscribeCrdt();\n          liveValue = newCrdt;\n          unsubscribeCrdt = room.subscribe(liveValue, rerender);\n          rerender();\n        }\n      }\n\n      let unsubscribeCrdt = room.subscribe(liveValue, rerender);\n      const unsubscribeRoot = room.subscribe(root, onRootChange);\n      rerender();\n      return () => {\n        unsubscribeRoot();\n        unsubscribeCrdt();\n      };\n    }, [root, room, key, rerender]);\n\n    if (root === null) {\n      return null;\n    } else {\n      return root.get(key);\n    }\n  }\n\n  function useStorage(selector, isEqual) {\n    const room = useRoom();\n    const rootOrNull = useMutableStorageRoot();\n    const wrappedSelector = React2.useCallback(rootOrNull2 => rootOrNull2 !== null ? selector(rootOrNull2) : null, [selector]);\n    const subscribe = React2.useCallback(onStoreChange => rootOrNull !== null ? room.subscribe(rootOrNull, onStoreChange, {\n      isDeep: true\n    }) : noop, [room, rootOrNull]);\n    const getSnapshot = React2.useCallback(() => {\n      if (rootOrNull === null) {\n        return null;\n      } else {\n        const root = rootOrNull;\n        const imm = root.toImmutable();\n        return imm;\n      }\n    }, [rootOrNull]);\n    const getServerSnapshot = React2.useCallback(() => null, []);\n    return _withselector.useSyncExternalStoreWithSelector.call(void 0, subscribe, getSnapshot, getServerSnapshot, wrappedSelector, isEqual);\n  }\n\n  function ensureNotServerSide() {\n    if (typeof window === \"undefined\") {\n      throw new Error(\"You cannot use the Suspense version of this hook on the server side. Make sure to only call them on the client side.\\nFor tips, see https://liveblocks.io/docs/api-reference/liveblocks-react#suspense-avoid-ssr\");\n    }\n  }\n\n  function useSuspendUntilStorageLoaded() {\n    const room = useRoom();\n\n    if (room.getStorageSnapshot() !== null) {\n      return;\n    }\n\n    ensureNotServerSide();\n    throw new Promise(res => {\n      room.events.storageDidLoad.subscribeOnce(() => res());\n    });\n  }\n\n  function useSuspendUntilPresenceLoaded() {\n    const room = useRoom();\n\n    if (room.isSelfAware()) {\n      return;\n    }\n\n    ensureNotServerSide();\n    throw new Promise(res => {\n      room.events.connection.subscribeOnce(() => res());\n    });\n  }\n\n  function useMutation(callback, deps) {\n    const room = useRoom();\n    return React2.useMemo(() => {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return room.batch(() => callback(makeMutationContext(room), ...args));\n      };\n    }, [room, ...deps]);\n  }\n\n  function useStorageSuspense(selector, isEqual) {\n    useSuspendUntilStorageLoaded();\n    return useStorage(selector, isEqual);\n  }\n\n  function useSelfSuspense(selector, isEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useSelf(selector, isEqual);\n  }\n\n  function useOthersSuspense(selector, isEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useOthers(selector, isEqual);\n  }\n\n  function useOthersConnectionIdsSuspense() {\n    useSuspendUntilPresenceLoaded();\n    return useOthersConnectionIds();\n  }\n\n  function useOthersMappedSuspense(itemSelector, itemIsEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useOthersMapped(itemSelector, itemIsEqual);\n  }\n\n  function useOtherSuspense(connectionId, selector, isEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useOther(connectionId, selector, isEqual);\n  }\n\n  function useLegacyKeySuspense(key) {\n    useSuspendUntilStorageLoaded();\n    return useLegacyKey(key);\n  }\n\n  return {\n    RoomContext,\n    RoomProvider,\n    useRoom,\n    useBatch,\n    useBroadcastEvent,\n    useErrorListener,\n    useEventListener,\n    useHistory,\n    useUndo,\n    useRedo,\n    useCanRedo,\n    useCanUndo,\n    useList: useLegacyKey,\n    useMap: useLegacyKey,\n    useObject: useLegacyKey,\n    useStorageRoot,\n    useStorage,\n    useSelf,\n    useMyPresence,\n    useUpdateMyPresence,\n    useOthers,\n    useOthersMapped,\n    useOthersConnectionIds,\n    useOther,\n    useMutation,\n    suspense: {\n      RoomContext,\n      RoomProvider,\n      useRoom,\n      useBatch,\n      useBroadcastEvent,\n      useErrorListener,\n      useEventListener,\n      useHistory,\n      useUndo,\n      useRedo,\n      useCanRedo,\n      useCanUndo,\n      useList: useLegacyKeySuspense,\n      useMap: useLegacyKeySuspense,\n      useObject: useLegacyKeySuspense,\n      useStorageRoot,\n      useStorage: useStorageSuspense,\n      useSelf: useSelfSuspense,\n      useMyPresence,\n      useUpdateMyPresence,\n      useOthers: useOthersSuspense,\n      useOthersMapped: useOthersMappedSuspense,\n      useOthersConnectionIds: useOthersConnectionIdsSuspense,\n      useOther: useOtherSuspense,\n      useMutation\n    }\n  };\n} // src/index.ts\n\n\nexports.ClientSideSuspense = ClientSideSuspense;\nexports.createRoomContext = createRoomContext;\nexports.shallow = _client.shallow;","map":{"version":3,"sources":["/Users/dongxiaomu/Desktop/csce672/CSCE 672 project/CSCE672-project/node_modules/@liveblocks/react/index.js"],"names":["Object","defineProperty","exports","value","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","default","_react","require","React","React2","ClientSideSuspense","props","mounted","setMounted","useState","useEffect","createElement","Suspense","fallback","children","_client","_internal","_withselector","useRerender","update","useReducer","x","useInitial","useRef","current","noop","identity","useSyncExternalStore","s","g","gg","useSyncExternalStoreWithSelector","EMPTY_OTHERS","asArrayWithLegacyMethods","getEmptyOthers","makeMutationContext","room","errmsg","storage","mutableRoot","getStorageSnapshot","Error","self","getSelf","others","getOthers","isSelfAware","setMyPresence","updatePresence","createRoomContext","client","RoomContext","createContext","RoomProvider","id","roomId","initialPresence","initialStorage","process","env","NODE_ENV","frozen","setRoom","enter","DO_NOT_USE_withoutConnecting","window","leave","Provider","connectionIdSelector","map","user","connectionId","useRoom","useContext","useMyPresence","subscribe","events","me","getSnapshot","getPresence","presence","setPresence","useUpdateMyPresence","useOthers","selector","isEqual","getServerSnapshot","useOthersConnectionIds","shallow","useOthersMapped","itemSelector","itemIsEqual","wrappedSelector","useCallback","other","wrappedIsEqual","a","b","eq","is","length","every","atuple","index","btuple","NOT_FOUND","Symbol","useOther","lastKnownValue","other2","find","other3","prev","curr","useBroadcastEvent","event","options","shouldQueueEventIfNotReady","broadcastEvent","useErrorListener","callback","savedCallback","error","e","useEventListener","listener","eventData","customEvent","useSelf","maybeSelector","onChange","unsub1","unsub2","connection","useMutableStorageRoot","storageDidLoad","subscribeOnce","useStorageRoot","useHistory","history","useUndo","undo","useRedo","redo","useCanUndo","canUndo","useCanRedo","canRedo","useBatch","batch","useLegacyKey","root","rerender","liveValue","get","onRootChange","newCrdt","unsubscribeCrdt","unsubscribeRoot","useStorage","rootOrNull","rootOrNull2","onStoreChange","isDeep","imm","toImmutable","ensureNotServerSide","useSuspendUntilStorageLoaded","Promise","res","useSuspendUntilPresenceLoaded","useMutation","deps","useMemo","args","useStorageSuspense","useSelfSuspense","useOthersSuspense","useOthersConnectionIdsSuspense","useOthersMappedSuspense","useOtherSuspense","useLegacyKeySuspense","useList","useMap","useObject","suspense"],"mappings":"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","sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } }// src/ClientSideSuspense.tsx\nvar _react = require('react'); var React = _interopRequireWildcard(_react); var React2 = _interopRequireWildcard(_react);\nfunction ClientSideSuspense(props) {\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  return /* @__PURE__ */ React.createElement(React.Suspense, {\n    fallback: props.fallback\n  }, mounted ? props.children() : props.fallback);\n}\n\n// src/factory.tsx\nvar _client = require('@liveblocks/client');\nvar _internal = require('@liveblocks/client/internal');\n\nvar _withselector = require('use-sync-external-store/shim/with-selector');\n\n// src/hooks.ts\n\nfunction useRerender() {\n  const [, update] = _react.useReducer.call(void 0, \n    (x) => x + 1,\n    0\n  );\n  return update;\n}\nfunction useInitial(value) {\n  return _react.useRef.call(void 0, value).current;\n}\n\n// src/factory.tsx\nvar noop = () => {\n};\nvar identity = (x) => x;\nfunction useSyncExternalStore(s, g, gg) {\n  return _withselector.useSyncExternalStoreWithSelector.call(void 0, s, g, gg, identity);\n}\nvar EMPTY_OTHERS = _internal.asArrayWithLegacyMethods.call(void 0, []);\nfunction getEmptyOthers() {\n  return EMPTY_OTHERS;\n}\nfunction makeMutationContext(room) {\n  const errmsg = \"This mutation cannot be used until connected to the Liveblocks room\";\n  return {\n    get storage() {\n      const mutableRoot = room.getStorageSnapshot();\n      if (mutableRoot === null) {\n        throw new Error(errmsg);\n      }\n      return mutableRoot;\n    },\n    get self() {\n      const self = room.getSelf();\n      if (self === null) {\n        throw new Error(errmsg);\n      }\n      return self;\n    },\n    get others() {\n      const others = room.getOthers();\n      if (!room.isSelfAware()) {\n        throw new Error(errmsg);\n      }\n      return others;\n    },\n    setMyPresence: room.updatePresence\n  };\n}\nfunction createRoomContext(client) {\n  const RoomContext = React2.createContext(null);\n  function RoomProvider(props) {\n    const { id: roomId, initialPresence, initialStorage } = props;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!roomId) {\n        throw new Error(\n          \"RoomProvider id property is required. For more information: https://liveblocks.io/docs/errors/liveblocks-react/RoomProvider-id-property-is-required\"\n        );\n      }\n      if (typeof roomId !== \"string\") {\n        throw new Error(\"RoomProvider id property should be a string.\");\n      }\n    }\n    const frozen = useInitial({\n      initialPresence,\n      initialStorage\n    });\n    const [room, setRoom] = React2.useState(\n      () => client.enter(roomId, {\n        initialPresence,\n        initialStorage,\n        DO_NOT_USE_withoutConnecting: typeof window === \"undefined\"\n      })\n    );\n    React2.useEffect(() => {\n      setRoom(\n        client.enter(roomId, {\n          initialPresence: frozen.initialPresence,\n          initialStorage: frozen.initialStorage,\n          DO_NOT_USE_withoutConnecting: typeof window === \"undefined\"\n        })\n      );\n      return () => {\n        client.leave(roomId);\n      };\n    }, [roomId, frozen]);\n    return /* @__PURE__ */ React2.createElement(RoomContext.Provider, {\n      value: room\n    }, props.children);\n  }\n  function connectionIdSelector(others) {\n    return others.map((user) => user.connectionId);\n  }\n  function useRoom() {\n    const room = React2.useContext(RoomContext);\n    if (room === null) {\n      throw new Error(\"RoomProvider is missing from the react tree\");\n    }\n    return room;\n  }\n  function useMyPresence() {\n    const room = useRoom();\n    const subscribe = room.events.me.subscribe;\n    const getSnapshot = room.getPresence;\n    const presence = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n    const setPresence = room.updatePresence;\n    return [presence, setPresence];\n  }\n  function useUpdateMyPresence() {\n    return useRoom().updatePresence;\n  }\n  function useOthers(selector, isEqual) {\n    const room = useRoom();\n    const subscribe = room.events.others.subscribe;\n    const getSnapshot = room.getOthers;\n    const getServerSnapshot = getEmptyOthers;\n    return _withselector.useSyncExternalStoreWithSelector.call(void 0, \n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      selector != null ? selector : identity,\n      isEqual\n    );\n  }\n  function useOthersConnectionIds() {\n    return useOthers(connectionIdSelector, _client.shallow);\n  }\n  function useOthersMapped(itemSelector, itemIsEqual) {\n    const wrappedSelector = React2.useCallback(\n      (others) => others.map(\n        (other) => [other.connectionId, itemSelector(other)]\n      ),\n      [itemSelector]\n    );\n    const wrappedIsEqual = React2.useCallback(\n      (a, b) => {\n        const eq = itemIsEqual != null ? itemIsEqual : Object.is;\n        return a.length === b.length && a.every((atuple, index) => {\n          const btuple = b[index];\n          return atuple[0] === btuple[0] && eq(atuple[1], btuple[1]);\n        });\n      },\n      [itemIsEqual]\n    );\n    return useOthers(wrappedSelector, wrappedIsEqual);\n  }\n  const NOT_FOUND = Symbol();\n  function useOther(connectionId, selector, isEqual) {\n    const lastKnownValue = React2.useRef(NOT_FOUND);\n    const wrappedSelector = React2.useCallback(\n      (others) => {\n        const other2 = others.find(\n          (other3) => other3.connectionId === connectionId\n        );\n        if (other2 !== void 0) {\n          const value = selector(other2);\n          lastKnownValue.current = value;\n          return value;\n        } else {\n          return lastKnownValue.current;\n        }\n      },\n      [connectionId, selector]\n    );\n    const wrappedIsEqual = React2.useCallback(\n      (prev, curr) => {\n        if (prev === NOT_FOUND || curr === NOT_FOUND) {\n          return prev === curr;\n        }\n        const eq = isEqual != null ? isEqual : Object.is;\n        return eq(prev, curr);\n      },\n      [isEqual]\n    );\n    const other = useOthers(wrappedSelector, wrappedIsEqual);\n    if (other === NOT_FOUND) {\n      throw new Error(\n        `No such other user with connection id ${connectionId} exists`\n      );\n    }\n    return other;\n  }\n  function useBroadcastEvent() {\n    const room = useRoom();\n    return React2.useCallback(\n      (event, options = { shouldQueueEventIfNotReady: false }) => {\n        room.broadcastEvent(event, options);\n      },\n      [room]\n    );\n  }\n  function useErrorListener(callback) {\n    const room = useRoom();\n    const savedCallback = React2.useRef(callback);\n    React2.useEffect(() => {\n      savedCallback.current = callback;\n    });\n    React2.useEffect(\n      () => room.events.error.subscribe((e) => savedCallback.current(e)),\n      [room]\n    );\n  }\n  function useEventListener(callback) {\n    const room = useRoom();\n    const savedCallback = React2.useRef(callback);\n    React2.useEffect(() => {\n      savedCallback.current = callback;\n    });\n    React2.useEffect(() => {\n      const listener = (eventData) => {\n        savedCallback.current(eventData);\n      };\n      return room.events.customEvent.subscribe(listener);\n    }, [room]);\n  }\n  function useSelf(maybeSelector, isEqual) {\n    const room = useRoom();\n    const subscribe = React2.useCallback(\n      (onChange) => {\n        const unsub1 = room.events.me.subscribe(onChange);\n        const unsub2 = room.events.connection.subscribe(onChange);\n        return () => {\n          unsub1();\n          unsub2();\n        };\n      },\n      [room]\n    );\n    const getSnapshot = room.getSelf;\n    const selector = maybeSelector != null ? maybeSelector : identity;\n    const wrappedSelector = React2.useCallback(\n      (me) => me !== null ? selector(me) : null,\n      [selector]\n    );\n    const getServerSnapshot = React2.useCallback(() => null, []);\n    return _withselector.useSyncExternalStoreWithSelector.call(void 0, \n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      wrappedSelector,\n      isEqual\n    );\n  }\n  function useMutableStorageRoot() {\n    const room = useRoom();\n    const subscribe = room.events.storageDidLoad.subscribeOnce;\n    const getSnapshot = room.getStorageSnapshot;\n    const getServerSnapshot = React2.useCallback(() => null, []);\n    return useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  }\n  function useStorageRoot() {\n    return [useMutableStorageRoot()];\n  }\n  function useHistory() {\n    return useRoom().history;\n  }\n  function useUndo() {\n    return useHistory().undo;\n  }\n  function useRedo() {\n    return useHistory().redo;\n  }\n  function useCanUndo() {\n    const room = useRoom();\n    const subscribe = room.events.history.subscribe;\n    const canUndo = room.history.canUndo;\n    return useSyncExternalStore(subscribe, canUndo, canUndo);\n  }\n  function useCanRedo() {\n    const room = useRoom();\n    const subscribe = room.events.history.subscribe;\n    const canRedo = room.history.canRedo;\n    return useSyncExternalStore(subscribe, canRedo, canRedo);\n  }\n  function useBatch() {\n    return useRoom().batch;\n  }\n  function useLegacyKey(key) {\n    const room = useRoom();\n    const root = useMutableStorageRoot();\n    const rerender = useRerender();\n    React2.useEffect(() => {\n      if (root === null) {\n        return;\n      }\n      let liveValue = root.get(key);\n      function onRootChange() {\n        const newCrdt = root.get(key);\n        if (newCrdt !== liveValue) {\n          unsubscribeCrdt();\n          liveValue = newCrdt;\n          unsubscribeCrdt = room.subscribe(\n            liveValue,\n            rerender\n          );\n          rerender();\n        }\n      }\n      let unsubscribeCrdt = room.subscribe(\n        liveValue,\n        rerender\n      );\n      const unsubscribeRoot = room.subscribe(\n        root,\n        onRootChange\n      );\n      rerender();\n      return () => {\n        unsubscribeRoot();\n        unsubscribeCrdt();\n      };\n    }, [root, room, key, rerender]);\n    if (root === null) {\n      return null;\n    } else {\n      return root.get(key);\n    }\n  }\n  function useStorage(selector, isEqual) {\n    const room = useRoom();\n    const rootOrNull = useMutableStorageRoot();\n    const wrappedSelector = React2.useCallback(\n      (rootOrNull2) => rootOrNull2 !== null ? selector(rootOrNull2) : null,\n      [selector]\n    );\n    const subscribe = React2.useCallback(\n      (onStoreChange) => rootOrNull !== null ? room.subscribe(rootOrNull, onStoreChange, { isDeep: true }) : noop,\n      [room, rootOrNull]\n    );\n    const getSnapshot = React2.useCallback(() => {\n      if (rootOrNull === null) {\n        return null;\n      } else {\n        const root = rootOrNull;\n        const imm = root.toImmutable();\n        return imm;\n      }\n    }, [rootOrNull]);\n    const getServerSnapshot = React2.useCallback(() => null, []);\n    return _withselector.useSyncExternalStoreWithSelector.call(void 0, \n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      wrappedSelector,\n      isEqual\n    );\n  }\n  function ensureNotServerSide() {\n    if (typeof window === \"undefined\") {\n      throw new Error(\n        \"You cannot use the Suspense version of this hook on the server side. Make sure to only call them on the client side.\\nFor tips, see https://liveblocks.io/docs/api-reference/liveblocks-react#suspense-avoid-ssr\"\n      );\n    }\n  }\n  function useSuspendUntilStorageLoaded() {\n    const room = useRoom();\n    if (room.getStorageSnapshot() !== null) {\n      return;\n    }\n    ensureNotServerSide();\n    throw new Promise((res) => {\n      room.events.storageDidLoad.subscribeOnce(() => res());\n    });\n  }\n  function useSuspendUntilPresenceLoaded() {\n    const room = useRoom();\n    if (room.isSelfAware()) {\n      return;\n    }\n    ensureNotServerSide();\n    throw new Promise((res) => {\n      room.events.connection.subscribeOnce(() => res());\n    });\n  }\n  function useMutation(callback, deps) {\n    const room = useRoom();\n    return React2.useMemo(\n      () => {\n        return (...args) => room.batch(\n          () => callback(makeMutationContext(room), ...args)\n        );\n      },\n      [room, ...deps]\n    );\n  }\n  function useStorageSuspense(selector, isEqual) {\n    useSuspendUntilStorageLoaded();\n    return useStorage(\n      selector,\n      isEqual\n    );\n  }\n  function useSelfSuspense(selector, isEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useSelf(\n      selector,\n      isEqual\n    );\n  }\n  function useOthersSuspense(selector, isEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useOthers(\n      selector,\n      isEqual\n    );\n  }\n  function useOthersConnectionIdsSuspense() {\n    useSuspendUntilPresenceLoaded();\n    return useOthersConnectionIds();\n  }\n  function useOthersMappedSuspense(itemSelector, itemIsEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useOthersMapped(itemSelector, itemIsEqual);\n  }\n  function useOtherSuspense(connectionId, selector, isEqual) {\n    useSuspendUntilPresenceLoaded();\n    return useOther(connectionId, selector, isEqual);\n  }\n  function useLegacyKeySuspense(key) {\n    useSuspendUntilStorageLoaded();\n    return useLegacyKey(key);\n  }\n  return {\n    RoomContext,\n    RoomProvider,\n    useRoom,\n    useBatch,\n    useBroadcastEvent,\n    useErrorListener,\n    useEventListener,\n    useHistory,\n    useUndo,\n    useRedo,\n    useCanRedo,\n    useCanUndo,\n    useList: useLegacyKey,\n    useMap: useLegacyKey,\n    useObject: useLegacyKey,\n    useStorageRoot,\n    useStorage,\n    useSelf,\n    useMyPresence,\n    useUpdateMyPresence,\n    useOthers,\n    useOthersMapped,\n    useOthersConnectionIds,\n    useOther,\n    useMutation,\n    suspense: {\n      RoomContext,\n      RoomProvider,\n      useRoom,\n      useBatch,\n      useBroadcastEvent,\n      useErrorListener,\n      useEventListener,\n      useHistory,\n      useUndo,\n      useRedo,\n      useCanRedo,\n      useCanUndo,\n      useList: useLegacyKeySuspense,\n      useMap: useLegacyKeySuspense,\n      useObject: useLegacyKeySuspense,\n      useStorageRoot,\n      useStorage: useStorageSuspense,\n      useSelf: useSelfSuspense,\n      useMyPresence,\n      useUpdateMyPresence,\n      useOthers: useOthersSuspense,\n      useOthersMapped: useOthersMappedSuspense,\n      useOthersConnectionIds: useOthersConnectionIdsSuspense,\n      useOther: useOtherSuspense,\n      useMutation\n    }\n  };\n}\n\n// src/index.ts\n\n\n\n\n\nexports.ClientSideSuspense = ClientSideSuspense; exports.createRoomContext = createRoomContext; exports.shallow = _client.shallow;\n"]},"metadata":{},"sourceType":"script"}