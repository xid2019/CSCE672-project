{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _chunkUV2F4F4Rjs = require('./chunk-UV2F4F4R.js'); // src/immutable.ts\n\n\nfunction lsonObjectToJson(obj) {\n  const result = {};\n\n  for (const key in obj) {\n    const val = obj[key];\n\n    if (val !== void 0) {\n      result[key] = lsonToJson(val);\n    }\n  }\n\n  return result;\n}\n\nfunction liveObjectToJson(liveObject) {\n  return lsonObjectToJson(liveObject.toObject());\n}\n\nfunction liveMapToJson(map) {\n  const result = {};\n\n  for (const [key, value] of map.entries()) {\n    result[key] = lsonToJson(value);\n  }\n\n  return result;\n}\n\nfunction lsonListToJson(value) {\n  return value.map(lsonToJson);\n}\n\nfunction liveListToJson(value) {\n  return lsonListToJson(value.toArray());\n}\n\nfunction lsonToJson(value) {\n  if (value instanceof _chunkUV2F4F4Rjs.LiveObject) {\n    return liveObjectToJson(value);\n  } else if (value instanceof _chunkUV2F4F4Rjs.LiveList) {\n    return liveListToJson(value);\n  } else if (value instanceof _chunkUV2F4F4Rjs.LiveMap) {\n    return liveMapToJson(value);\n  } else if (value instanceof _chunkUV2F4F4Rjs.LiveRegister) {\n    return value.data;\n  }\n\n  if (Array.isArray(value)) {\n    return lsonListToJson(value);\n  } else if (_chunkUV2F4F4Rjs.isPlainObject.call(void 0, value)) {\n    return lsonObjectToJson(value);\n  }\n\n  return value;\n}\n\nfunction deepLiveify(value) {\n  if (Array.isArray(value)) {\n    return new (0, _chunkUV2F4F4Rjs.LiveList)(value.map(deepLiveify));\n  } else if (_chunkUV2F4F4Rjs.isPlainObject.call(void 0, value)) {\n    const init = {};\n\n    for (const key in value) {\n      const val = value[key];\n\n      if (val === void 0) {\n        continue;\n      }\n\n      init[key] = deepLiveify(val);\n    }\n\n    return new (0, _chunkUV2F4F4Rjs.LiveObject)(init);\n  } else {\n    return value;\n  }\n}\n\nfunction patchLiveList(liveList, prev, next) {\n  let i = 0;\n  let prevEnd = prev.length - 1;\n  let nextEnd = next.length - 1;\n  let prevNode = prev[0];\n  let nextNode = next[0];\n\n  outer: {\n    while (prevNode === nextNode) {\n      ++i;\n\n      if (i > prevEnd || i > nextEnd) {\n        break outer;\n      }\n\n      prevNode = prev[i];\n      nextNode = next[i];\n    }\n\n    prevNode = prev[prevEnd];\n    nextNode = next[nextEnd];\n\n    while (prevNode === nextNode) {\n      prevEnd--;\n      nextEnd--;\n\n      if (i > prevEnd || i > nextEnd) {\n        break outer;\n      }\n\n      prevNode = prev[prevEnd];\n      nextNode = next[nextEnd];\n    }\n  }\n\n  if (i > prevEnd) {\n    if (i <= nextEnd) {\n      while (i <= nextEnd) {\n        liveList.insert(deepLiveify(next[i]), i);\n        i++;\n      }\n    }\n  } else if (i > nextEnd) {\n    let localI = i;\n\n    while (localI <= prevEnd) {\n      liveList.delete(i);\n      localI++;\n    }\n  } else {\n    while (i <= prevEnd && i <= nextEnd) {\n      prevNode = prev[i];\n      nextNode = next[i];\n      const liveListNode = liveList.get(i);\n\n      if (_chunkUV2F4F4Rjs.isLiveObject.call(void 0, liveListNode) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, prevNode) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, nextNode)) {\n        patchLiveObject(liveListNode, prevNode, nextNode);\n      } else {\n        liveList.set(i, deepLiveify(nextNode));\n      }\n\n      i++;\n    }\n\n    while (i <= nextEnd) {\n      liveList.insert(deepLiveify(next[i]), i);\n      i++;\n    }\n\n    let localI = i;\n\n    while (localI <= prevEnd) {\n      liveList.delete(i);\n      localI++;\n    }\n  }\n}\n\nfunction patchLiveObjectKey(liveObject, key, prev, next) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const nonSerializableValue = _chunkUV2F4F4Rjs.findNonSerializableValue.call(void 0, next);\n\n    if (nonSerializableValue) {\n      console.error(`New state path: '${nonSerializableValue.path}' value: '${nonSerializableValue.value}' is not serializable.\nOnly serializable value can be synced with Liveblocks.`);\n      return;\n    }\n  }\n\n  const value = liveObject.get(key);\n\n  if (next === void 0) {\n    liveObject.delete(key);\n  } else if (value === void 0) {\n    liveObject.set(key, deepLiveify(next));\n  } else if (prev === next) {\n    return;\n  } else if (_chunkUV2F4F4Rjs.isLiveList.call(void 0, value) && Array.isArray(prev) && Array.isArray(next)) {\n    patchLiveList(value, prev, next);\n  } else if (_chunkUV2F4F4Rjs.isLiveObject.call(void 0, value) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, prev) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, next)) {\n    patchLiveObject(value, prev, next);\n  } else {\n    liveObject.set(key, deepLiveify(next));\n  }\n}\n\nfunction patchLiveObject(root, prev, next) {\n  const updates = {};\n\n  for (const key in next) {\n    patchLiveObjectKey(root, key, prev[key], next[key]);\n  }\n\n  for (const key in prev) {\n    if (next[key] === void 0) {\n      root.delete(key);\n    }\n  }\n\n  if (Object.keys(updates).length > 0) {\n    root.update(updates);\n  }\n}\n\nfunction getParentsPath(node) {\n  const path = [];\n\n  while (node.parent.type === \"HasParent\") {\n    if (_chunkUV2F4F4Rjs.isLiveList.call(void 0, node.parent.node)) {\n      path.push(node.parent.node._indexOfPosition(node.parent.key));\n    } else {\n      path.push(node.parent.key);\n    }\n\n    node = node.parent.node;\n  }\n\n  return path;\n}\n\nfunction legacy_patchImmutableObject(state, updates) {\n  return updates.reduce((state2, update) => legacy_patchImmutableObjectWithUpdate(state2, update), state);\n}\n\nfunction legacy_patchImmutableObjectWithUpdate(state, update) {\n  const path = getParentsPath(update.node);\n  return legacy_patchImmutableNode(state, path, update);\n}\n\nfunction legacy_patchImmutableNode(state, path, update) {\n  var _a, _b, _c, _d;\n\n  const pathItem = path.pop();\n\n  if (pathItem === void 0) {\n    switch (update.type) {\n      case \"LiveObject\":\n        {\n          if (state === null || typeof state !== \"object\" || Array.isArray(state)) {\n            throw new Error(\"Internal: received update on LiveObject but state was not an object\");\n          }\n\n          const newState = Object.assign({}, state);\n\n          for (const key in update.updates) {\n            if (((_a = update.updates[key]) == null ? void 0 : _a.type) === \"update\") {\n              const val = update.node.get(key);\n\n              if (val !== void 0) {\n                newState[key] = lsonToJson(val);\n              }\n            } else if (((_b = update.updates[key]) == null ? void 0 : _b.type) === \"delete\") {\n              delete newState[key];\n            }\n          }\n\n          return newState;\n        }\n\n      case \"LiveList\":\n        {\n          if (!Array.isArray(state)) {\n            throw new Error(\"Internal: received update on LiveList but state was not an array\");\n          }\n\n          let newState = state.map(x => x);\n\n          for (const listUpdate of update.updates) {\n            if (listUpdate.type === \"set\") {\n              newState = newState.map((item, index) => index === listUpdate.index ? lsonToJson(listUpdate.item) : item);\n            } else if (listUpdate.type === \"insert\") {\n              if (listUpdate.index === newState.length) {\n                newState.push(lsonToJson(listUpdate.item));\n              } else {\n                newState = [...newState.slice(0, listUpdate.index), lsonToJson(listUpdate.item), ...newState.slice(listUpdate.index)];\n              }\n            } else if (listUpdate.type === \"delete\") {\n              newState.splice(listUpdate.index, 1);\n            } else if (listUpdate.type === \"move\") {\n              if (listUpdate.previousIndex > listUpdate.index) {\n                newState = [...newState.slice(0, listUpdate.index), lsonToJson(listUpdate.item), ...newState.slice(listUpdate.index, listUpdate.previousIndex), ...newState.slice(listUpdate.previousIndex + 1)];\n              } else {\n                newState = [...newState.slice(0, listUpdate.previousIndex), ...newState.slice(listUpdate.previousIndex + 1, listUpdate.index + 1), lsonToJson(listUpdate.item), ...newState.slice(listUpdate.index + 1)];\n              }\n            }\n          }\n\n          return newState;\n        }\n\n      case \"LiveMap\":\n        {\n          if (state === null || typeof state !== \"object\" || Array.isArray(state)) {\n            throw new Error(\"Internal: received update on LiveMap but state was not an object\");\n          }\n\n          const newState = Object.assign({}, state);\n\n          for (const key in update.updates) {\n            if (((_c = update.updates[key]) == null ? void 0 : _c.type) === \"update\") {\n              const value = update.node.get(key);\n\n              if (value !== void 0) {\n                newState[key] = lsonToJson(value);\n              }\n            } else if (((_d = update.updates[key]) == null ? void 0 : _d.type) === \"delete\") {\n              delete newState[key];\n            }\n          }\n\n          return newState;\n        }\n    }\n  }\n\n  if (Array.isArray(state)) {\n    const newArray = [...state];\n    newArray[pathItem] = legacy_patchImmutableNode(state[pathItem], path, update);\n    return newArray;\n  } else if (state !== null && typeof state === \"object\") {\n    const node = state[pathItem];\n\n    if (node === void 0) {\n      return state;\n    } else {\n      return _chunkUV2F4F4Rjs.__spreadProps.call(void 0, _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, state), {\n        [pathItem]: legacy_patchImmutableNode(node, path, update)\n      });\n    }\n  } else {\n    return state;\n  }\n}\n\nexports.ClientMsgCode = _chunkUV2F4F4Rjs.ClientMsgCode;\nexports.CrdtType = _chunkUV2F4F4Rjs.CrdtType;\nexports.OpCode = _chunkUV2F4F4Rjs.OpCode;\nexports.ServerMsgCode = _chunkUV2F4F4Rjs.ServerMsgCode;\nexports.WebsocketCloseCodes = _chunkUV2F4F4Rjs.WebsocketCloseCodes;\nexports.asArrayWithLegacyMethods = _chunkUV2F4F4Rjs.asArrayWithLegacyMethods;\nexports.assertNever = _chunkUV2F4F4Rjs.assertNever;\nexports.b64decode = _chunkUV2F4F4Rjs.b64decode;\nexports.comparePosition = _chunkUV2F4F4Rjs.comparePosition;\nexports.deprecate = _chunkUV2F4F4Rjs.deprecate;\nexports.deprecateIf = _chunkUV2F4F4Rjs.deprecateIf;\nexports.errorIf = _chunkUV2F4F4Rjs.errorIf;\nexports.freeze = _chunkUV2F4F4Rjs.freeze;\nexports.isAppOnlyAuthToken = _chunkUV2F4F4Rjs.isAppOnlyAuthToken;\nexports.isAuthToken = _chunkUV2F4F4Rjs.isAuthToken;\nexports.isChildCrdt = _chunkUV2F4F4Rjs.isChildCrdt;\nexports.isJsonArray = _chunkUV2F4F4Rjs.isJsonArray;\nexports.isJsonObject = _chunkUV2F4F4Rjs.isJsonObject;\nexports.isJsonScalar = _chunkUV2F4F4Rjs.isJsonScalar;\nexports.isPlainObject = _chunkUV2F4F4Rjs.isPlainObject;\nexports.isRoomAuthToken = _chunkUV2F4F4Rjs.isRoomAuthToken;\nexports.isRootCrdt = _chunkUV2F4F4Rjs.isRootCrdt;\nexports.isScope = _chunkUV2F4F4Rjs.isScope;\nexports.legacy_patchImmutableObject = legacy_patchImmutableObject;\nexports.lsonToJson = lsonToJson;\nexports.makePosition = _chunkUV2F4F4Rjs.makePosition;\nexports.nn = _chunkUV2F4F4Rjs.nn;\nexports.patchLiveObjectKey = patchLiveObjectKey;\nexports.throwUsageError = _chunkUV2F4F4Rjs.throwUsageError;\nexports.tryParseJson = _chunkUV2F4F4Rjs.tryParseJson;","map":{"version":3,"sources":["/Users/dongxiaomu/Desktop/csce672/CSCE 672 project/CSCE672-project/node_modules/@liveblocks/client/internal.js"],"names":["Object","defineProperty","exports","value","_chunkUV2F4F4Rjs","require","lsonObjectToJson","obj","result","key","val","lsonToJson","liveObjectToJson","liveObject","toObject","liveMapToJson","map","entries","lsonListToJson","liveListToJson","toArray","LiveObject","LiveList","LiveMap","LiveRegister","data","Array","isArray","isPlainObject","call","deepLiveify","init","patchLiveList","liveList","prev","next","i","prevEnd","length","nextEnd","prevNode","nextNode","outer","insert","localI","delete","liveListNode","get","isLiveObject","patchLiveObject","set","patchLiveObjectKey","process","env","NODE_ENV","nonSerializableValue","findNonSerializableValue","console","error","path","isLiveList","root","updates","keys","update","getParentsPath","node","parent","type","push","_indexOfPosition","legacy_patchImmutableObject","state","reduce","state2","legacy_patchImmutableObjectWithUpdate","legacy_patchImmutableNode","_a","_b","_c","_d","pathItem","pop","Error","newState","assign","x","listUpdate","item","index","slice","splice","previousIndex","newArray","__spreadProps","__spreadValues","ClientMsgCode","CrdtType","OpCode","ServerMsgCode","WebsocketCloseCodes","asArrayWithLegacyMethods","assertNever","b64decode","comparePosition","deprecate","deprecateIf","errorIf","freeze","isAppOnlyAuthToken","isAuthToken","isChildCrdt","isJsonArray","isJsonObject","isJsonScalar","isRoomAuthToken","isRootCrdt","isScope","makePosition","nn","throwUsageError","tryParseJson"],"mappings":"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","sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkUV2F4F4Rjs = require('./chunk-UV2F4F4R.js');\n\n// src/immutable.ts\nfunction lsonObjectToJson(obj) {\n  const result = {};\n  for (const key in obj) {\n    const val = obj[key];\n    if (val !== void 0) {\n      result[key] = lsonToJson(val);\n    }\n  }\n  return result;\n}\nfunction liveObjectToJson(liveObject) {\n  return lsonObjectToJson(liveObject.toObject());\n}\nfunction liveMapToJson(map) {\n  const result = {};\n  for (const [key, value] of map.entries()) {\n    result[key] = lsonToJson(value);\n  }\n  return result;\n}\nfunction lsonListToJson(value) {\n  return value.map(lsonToJson);\n}\nfunction liveListToJson(value) {\n  return lsonListToJson(value.toArray());\n}\nfunction lsonToJson(value) {\n  if (value instanceof _chunkUV2F4F4Rjs.LiveObject) {\n    return liveObjectToJson(value);\n  } else if (value instanceof _chunkUV2F4F4Rjs.LiveList) {\n    return liveListToJson(value);\n  } else if (value instanceof _chunkUV2F4F4Rjs.LiveMap) {\n    return liveMapToJson(value);\n  } else if (value instanceof _chunkUV2F4F4Rjs.LiveRegister) {\n    return value.data;\n  }\n  if (Array.isArray(value)) {\n    return lsonListToJson(value);\n  } else if (_chunkUV2F4F4Rjs.isPlainObject.call(void 0, value)) {\n    return lsonObjectToJson(value);\n  }\n  return value;\n}\nfunction deepLiveify(value) {\n  if (Array.isArray(value)) {\n    return new (0, _chunkUV2F4F4Rjs.LiveList)(value.map(deepLiveify));\n  } else if (_chunkUV2F4F4Rjs.isPlainObject.call(void 0, value)) {\n    const init = {};\n    for (const key in value) {\n      const val = value[key];\n      if (val === void 0) {\n        continue;\n      }\n      init[key] = deepLiveify(val);\n    }\n    return new (0, _chunkUV2F4F4Rjs.LiveObject)(init);\n  } else {\n    return value;\n  }\n}\nfunction patchLiveList(liveList, prev, next) {\n  let i = 0;\n  let prevEnd = prev.length - 1;\n  let nextEnd = next.length - 1;\n  let prevNode = prev[0];\n  let nextNode = next[0];\n  outer: {\n    while (prevNode === nextNode) {\n      ++i;\n      if (i > prevEnd || i > nextEnd) {\n        break outer;\n      }\n      prevNode = prev[i];\n      nextNode = next[i];\n    }\n    prevNode = prev[prevEnd];\n    nextNode = next[nextEnd];\n    while (prevNode === nextNode) {\n      prevEnd--;\n      nextEnd--;\n      if (i > prevEnd || i > nextEnd) {\n        break outer;\n      }\n      prevNode = prev[prevEnd];\n      nextNode = next[nextEnd];\n    }\n  }\n  if (i > prevEnd) {\n    if (i <= nextEnd) {\n      while (i <= nextEnd) {\n        liveList.insert(deepLiveify(next[i]), i);\n        i++;\n      }\n    }\n  } else if (i > nextEnd) {\n    let localI = i;\n    while (localI <= prevEnd) {\n      liveList.delete(i);\n      localI++;\n    }\n  } else {\n    while (i <= prevEnd && i <= nextEnd) {\n      prevNode = prev[i];\n      nextNode = next[i];\n      const liveListNode = liveList.get(i);\n      if (_chunkUV2F4F4Rjs.isLiveObject.call(void 0, liveListNode) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, prevNode) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, nextNode)) {\n        patchLiveObject(liveListNode, prevNode, nextNode);\n      } else {\n        liveList.set(i, deepLiveify(nextNode));\n      }\n      i++;\n    }\n    while (i <= nextEnd) {\n      liveList.insert(deepLiveify(next[i]), i);\n      i++;\n    }\n    let localI = i;\n    while (localI <= prevEnd) {\n      liveList.delete(i);\n      localI++;\n    }\n  }\n}\nfunction patchLiveObjectKey(liveObject, key, prev, next) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const nonSerializableValue = _chunkUV2F4F4Rjs.findNonSerializableValue.call(void 0, next);\n    if (nonSerializableValue) {\n      console.error(\n        `New state path: '${nonSerializableValue.path}' value: '${nonSerializableValue.value}' is not serializable.\nOnly serializable value can be synced with Liveblocks.`\n      );\n      return;\n    }\n  }\n  const value = liveObject.get(key);\n  if (next === void 0) {\n    liveObject.delete(key);\n  } else if (value === void 0) {\n    liveObject.set(key, deepLiveify(next));\n  } else if (prev === next) {\n    return;\n  } else if (_chunkUV2F4F4Rjs.isLiveList.call(void 0, value) && Array.isArray(prev) && Array.isArray(next)) {\n    patchLiveList(value, prev, next);\n  } else if (_chunkUV2F4F4Rjs.isLiveObject.call(void 0, value) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, prev) && _chunkUV2F4F4Rjs.isPlainObject.call(void 0, next)) {\n    patchLiveObject(value, prev, next);\n  } else {\n    liveObject.set(key, deepLiveify(next));\n  }\n}\nfunction patchLiveObject(root, prev, next) {\n  const updates = {};\n  for (const key in next) {\n    patchLiveObjectKey(root, key, prev[key], next[key]);\n  }\n  for (const key in prev) {\n    if (next[key] === void 0) {\n      root.delete(key);\n    }\n  }\n  if (Object.keys(updates).length > 0) {\n    root.update(updates);\n  }\n}\nfunction getParentsPath(node) {\n  const path = [];\n  while (node.parent.type === \"HasParent\") {\n    if (_chunkUV2F4F4Rjs.isLiveList.call(void 0, node.parent.node)) {\n      path.push(node.parent.node._indexOfPosition(node.parent.key));\n    } else {\n      path.push(node.parent.key);\n    }\n    node = node.parent.node;\n  }\n  return path;\n}\nfunction legacy_patchImmutableObject(state, updates) {\n  return updates.reduce(\n    (state2, update) => legacy_patchImmutableObjectWithUpdate(state2, update),\n    state\n  );\n}\nfunction legacy_patchImmutableObjectWithUpdate(state, update) {\n  const path = getParentsPath(update.node);\n  return legacy_patchImmutableNode(state, path, update);\n}\nfunction legacy_patchImmutableNode(state, path, update) {\n  var _a, _b, _c, _d;\n  const pathItem = path.pop();\n  if (pathItem === void 0) {\n    switch (update.type) {\n      case \"LiveObject\": {\n        if (state === null || typeof state !== \"object\" || Array.isArray(state)) {\n          throw new Error(\n            \"Internal: received update on LiveObject but state was not an object\"\n          );\n        }\n        const newState = Object.assign({}, state);\n        for (const key in update.updates) {\n          if (((_a = update.updates[key]) == null ? void 0 : _a.type) === \"update\") {\n            const val = update.node.get(key);\n            if (val !== void 0) {\n              newState[key] = lsonToJson(val);\n            }\n          } else if (((_b = update.updates[key]) == null ? void 0 : _b.type) === \"delete\") {\n            delete newState[key];\n          }\n        }\n        return newState;\n      }\n      case \"LiveList\": {\n        if (!Array.isArray(state)) {\n          throw new Error(\n            \"Internal: received update on LiveList but state was not an array\"\n          );\n        }\n        let newState = state.map((x) => x);\n        for (const listUpdate of update.updates) {\n          if (listUpdate.type === \"set\") {\n            newState = newState.map(\n              (item, index) => index === listUpdate.index ? lsonToJson(listUpdate.item) : item\n            );\n          } else if (listUpdate.type === \"insert\") {\n            if (listUpdate.index === newState.length) {\n              newState.push(lsonToJson(listUpdate.item));\n            } else {\n              newState = [\n                ...newState.slice(0, listUpdate.index),\n                lsonToJson(listUpdate.item),\n                ...newState.slice(listUpdate.index)\n              ];\n            }\n          } else if (listUpdate.type === \"delete\") {\n            newState.splice(listUpdate.index, 1);\n          } else if (listUpdate.type === \"move\") {\n            if (listUpdate.previousIndex > listUpdate.index) {\n              newState = [\n                ...newState.slice(0, listUpdate.index),\n                lsonToJson(listUpdate.item),\n                ...newState.slice(listUpdate.index, listUpdate.previousIndex),\n                ...newState.slice(listUpdate.previousIndex + 1)\n              ];\n            } else {\n              newState = [\n                ...newState.slice(0, listUpdate.previousIndex),\n                ...newState.slice(\n                  listUpdate.previousIndex + 1,\n                  listUpdate.index + 1\n                ),\n                lsonToJson(listUpdate.item),\n                ...newState.slice(listUpdate.index + 1)\n              ];\n            }\n          }\n        }\n        return newState;\n      }\n      case \"LiveMap\": {\n        if (state === null || typeof state !== \"object\" || Array.isArray(state)) {\n          throw new Error(\n            \"Internal: received update on LiveMap but state was not an object\"\n          );\n        }\n        const newState = Object.assign({}, state);\n        for (const key in update.updates) {\n          if (((_c = update.updates[key]) == null ? void 0 : _c.type) === \"update\") {\n            const value = update.node.get(key);\n            if (value !== void 0) {\n              newState[key] = lsonToJson(value);\n            }\n          } else if (((_d = update.updates[key]) == null ? void 0 : _d.type) === \"delete\") {\n            delete newState[key];\n          }\n        }\n        return newState;\n      }\n    }\n  }\n  if (Array.isArray(state)) {\n    const newArray = [...state];\n    newArray[pathItem] = legacy_patchImmutableNode(\n      state[pathItem],\n      path,\n      update\n    );\n    return newArray;\n  } else if (state !== null && typeof state === \"object\") {\n    const node = state[pathItem];\n    if (node === void 0) {\n      return state;\n    } else {\n      return _chunkUV2F4F4Rjs.__spreadProps.call(void 0, _chunkUV2F4F4Rjs.__spreadValues.call(void 0, {}, state), {\n        [pathItem]: legacy_patchImmutableNode(node, path, update)\n      });\n    }\n  } else {\n    return state;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.ClientMsgCode = _chunkUV2F4F4Rjs.ClientMsgCode; exports.CrdtType = _chunkUV2F4F4Rjs.CrdtType; exports.OpCode = _chunkUV2F4F4Rjs.OpCode; exports.ServerMsgCode = _chunkUV2F4F4Rjs.ServerMsgCode; exports.WebsocketCloseCodes = _chunkUV2F4F4Rjs.WebsocketCloseCodes; exports.asArrayWithLegacyMethods = _chunkUV2F4F4Rjs.asArrayWithLegacyMethods; exports.assertNever = _chunkUV2F4F4Rjs.assertNever; exports.b64decode = _chunkUV2F4F4Rjs.b64decode; exports.comparePosition = _chunkUV2F4F4Rjs.comparePosition; exports.deprecate = _chunkUV2F4F4Rjs.deprecate; exports.deprecateIf = _chunkUV2F4F4Rjs.deprecateIf; exports.errorIf = _chunkUV2F4F4Rjs.errorIf; exports.freeze = _chunkUV2F4F4Rjs.freeze; exports.isAppOnlyAuthToken = _chunkUV2F4F4Rjs.isAppOnlyAuthToken; exports.isAuthToken = _chunkUV2F4F4Rjs.isAuthToken; exports.isChildCrdt = _chunkUV2F4F4Rjs.isChildCrdt; exports.isJsonArray = _chunkUV2F4F4Rjs.isJsonArray; exports.isJsonObject = _chunkUV2F4F4Rjs.isJsonObject; exports.isJsonScalar = _chunkUV2F4F4Rjs.isJsonScalar; exports.isPlainObject = _chunkUV2F4F4Rjs.isPlainObject; exports.isRoomAuthToken = _chunkUV2F4F4Rjs.isRoomAuthToken; exports.isRootCrdt = _chunkUV2F4F4Rjs.isRootCrdt; exports.isScope = _chunkUV2F4F4Rjs.isScope; exports.legacy_patchImmutableObject = legacy_patchImmutableObject; exports.lsonToJson = lsonToJson; exports.makePosition = _chunkUV2F4F4Rjs.makePosition; exports.nn = _chunkUV2F4F4Rjs.nn; exports.patchLiveObjectKey = patchLiveObjectKey; exports.throwUsageError = _chunkUV2F4F4Rjs.throwUsageError; exports.tryParseJson = _chunkUV2F4F4Rjs.tryParseJson;\n"]},"metadata":{},"sourceType":"script"}